import{_ as e,c as a,o as i,aU as l}from"./chunks/framework.CpXV_ol5.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh/colorful-uni/guide/changelog.md","filePath":"zh/colorful-uni/guide/changelog.md","lastUpdated":1732258151000}'),t={name:"zh/colorful-uni/guide/changelog.md"},o=l('<h2 id="_1-0-0-2024-11-22" tabindex="-1">1.0.0（2024-11-22） <a class="header-anchor" href="#_1-0-0-2024-11-22" aria-label="Permalink to &quot;1.0.0（2024-11-22）&quot;">​</a></h2><h3 id="🚀-features-组件" tabindex="-1">🚀 Features | 组件 <a class="header-anchor" href="#🚀-features-组件" aria-label="Permalink to &quot;🚀 Features | 组件&quot;">​</a></h3><ul><li><p>🚀 Layout - 包裹布局：所有页面父布局，为便于全局注入方法及组件，所有页面需要以此来包裹</p></li><li><p>🚀 Button - 按钮：扩展了uView button 的部分功能，支持自定义主题</p></li><li><p>🚀 Loader - 加载图标：为一个小动画，目前用在组件的正在加载状态场景。</p></li><li><p>🚀 Loading - 加载框：弹窗加载提示，比如请求loading等</p></li><li><p>🚀 Table - 表格：表格组件，一般用于展示大量结构化数据的场景</p></li><li><p>🚀 Toast - 提示框：弹窗提示框，用于提示用户信息</p></li><li><p>🚀 Webview - 网页视图：webview 是一个 web 浏览器组件，可以用来承载网页的容器，会自动铺满整个页面</p></li><li><p>🚀 Updater - 应用更新管理：App 更新提示</p></li><li><p>🚀 Apis - 服务器选择：解决多个服务器环境切换功能</p></li></ul><h3 id="💪-features-工具" tabindex="-1">💪 Features | 工具 <a class="header-anchor" href="#💪-features-工具" aria-label="Permalink to &quot;💪 Features | 工具&quot;">​</a></h3><ul><li><p>💪 Checker - 表单校验：提供了常用的表单校验方法，封装了常用规则</p></li><li><p>💪 Http - 网络请求类：一个基于 promise 的，轻量且强大的 http 网络库</p></li><li><p>💪 Optimize - 优化类：防抖、节流优化</p></li><li><p>💪 Pager - 分页类：支持两种分页模式，按照 总页数分页pages、总数量分页total 两种模式分页</p></li><li><p>💪 Push - 推送类：方便客户端使用UniPush，初始化并监听了消息接收事件、点击事件</p></li><li><p>💪 Plus - 真机类：Plus为封装的部分HTML5+内部方法，用于获取设备信息</p></li><li><p>💪 Store - 状态管理类：Vuex 支持模块生成，支持持久化数据存储，支持state更新、重置、清空</p></li><li><p>💪 Tips - 提示类：Tips为方法类，内部使用了基于 vuex 的状态管理，主要封装了loading、toast、confirm等常用方法</p></li></ul>',5),p=[o];function r(s,u,n,c,d,h){return i(),a("div",null,p)}const g=e(t,[["render",r]]);export{f as __pageData,g as default};
