import{_ as s,c as i,I as e,aU as t,o as l,E as n}from"./chunks/framework.CpXV_ol5.js";const F=JSON.parse('{"title":"VOLTA：更优秀的项目级 Node.js 版本管理工具","description":"","frontmatter":{"title":"VOLTA：更优秀的项目级 Node.js 版本管理工具"},"headers":[],"relativePath":"zh/blog/tools/VOLTA：更优秀的项目级Node.js版本管理工具.md","filePath":"zh/blog/tools/VOLTA：更优秀的项目级Node.js版本管理工具.md","lastUpdated":1725606759000}'),p={name:"zh/blog/tools/VOLTA：更优秀的项目级Node.js版本管理工具.md"},h=t('<h2 id="一-背景" tabindex="-1">一. 背景 <a class="header-anchor" href="#一-背景" aria-label="Permalink to &quot;一. 背景&quot;">​</a></h2><p>前一篇文章写到：<a href="https://juejin.cn/post/7392070976060866596" target="_blank" rel="noreferrer">使用 nvm 为多项目设置不同 Node.js 环境，被同事们集体点赞了 ！</a></p><p>文章的主要目的是为了解决在同时开发多个项目的时候，由于每个项目可能使用的 Node.js 版本不一致，如何方便快捷的根据不同项目使用适应的 Node.js 版本。</p><p>如果你也是使用的 nvm 来管理，可以搭配 <code>.nvmrc</code> + <code>vscode</code> 插件配合使用实现无缝切换。</p><p>但是由于 nvm 这个工具比较老，可能在设置项目级版本的方案上，有一些兼容问题，比如：<code>.nvmrc</code> 配置不支持 Windows 系统，可能需要搭配其他的命令或工具实现。</p><p>其实要实现这种项目级别 Node.js 版本切换，或许有其他更优的解决方案可以参考，本文我们来介绍一个新的 node 版本管理工具：<code>Volta</code></p><h2 id="二-了解-volta" tabindex="-1">二. 了解 Volta <a class="header-anchor" href="#二-了解-volta" aria-label="Permalink to &quot;二. 了解 Volta&quot;">​</a></h2><p><code>Volta</code>  是一种管理 JavaScript 命令行工具的便捷方式。</p><p>在这里，我对比一下我正在使用的 <code>nvm</code> 管理工具，我总结了 <code>Volta</code>  的优点：</p><ul><li>项目级管理，无缝版本切换</li><li>跨平台支持，包括 Windows 和所有 Unix shell</li><li>支持多个包管理器 npm yarn pnpm</li></ul><h2 id="三-安装" tabindex="-1">三. 安装 <a class="header-anchor" href="#三-安装" aria-label="Permalink to &quot;三. 安装&quot;">​</a></h2><p>在安装 Volta 工具前，如果有使用其它的 Node.js 管理工具，建议卸载掉，避免出现问题。</p><h3 id="_1-unix-安装" tabindex="-1">1. Unix 安装 <a class="header-anchor" href="#_1-unix-安装" aria-label="Permalink to &quot;1. Unix 安装&quot;">​</a></h3><p>在大多数 Unix 系统(包括 macOS)上，您可以使用一个命令安装 Volta：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl https://get.volta.sh </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h3 id="_2-windows-安装" tabindex="-1">2. Windows 安装 <a class="header-anchor" href="#_2-windows-安装" aria-label="Permalink to &quot;2. Windows 安装&quot;">​</a></h3><p>对于 Windows，下载并运行 Windows 安装程序并按照说明，进行安装操作。如下所示，选择最新版本或其他合适的版本进行下载，当前 Volta 最新版本为 v1.1.1</p><p><a href="https://github.com/volta-cli/volta/releases" target="_blank" rel="noreferrer">Volta 选择版本下载</a></p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/906c19e734804de488ffcd00279dec97~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1726119680&amp;x-orig-sign=tK2rfIq36vFXZChPMDKUlO%2F8N44%3D" alt="image.png"></p><h2 id="四-一些主要命令" tabindex="-1">四. 一些主要命令 <a class="header-anchor" href="#四-一些主要命令" aria-label="Permalink to &quot;四. 一些主要命令&quot;">​</a></h2><p>Volta 提供了一系列命令来帮助你管理 Node.js、npm、yarn 和 pnpm 的版本，下面是 Volta 基本命令的简要说明：</p><h3 id="_1-fetch" tabindex="-1">1. <code>fetch</code> <a class="header-anchor" href="#_1-fetch" aria-label="Permalink to &quot;1. `fetch`&quot;">​</a></h3><p>从远程仓库获取工具（如 Node.js 或 npm）的特定版本，但不安装它们，可以将工具缓存到本地机器以供离线使用。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.14.0</span></span></code></pre></div><h3 id="_2-install" tabindex="-1">2. <code>install</code> <a class="header-anchor" href="#_2-install" aria-label="Permalink to &quot;2. `install`&quot;">​</a></h3><p>安装工具的指定版本，设置工具的默认版本，并使其成为全局默认版本或项目级别的版本。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 全局安装 Node.js 16.14.0</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.14.0</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 项目级别的安装</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /path/to/project</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.14.0</span></span></code></pre></div><h3 id="_3-uninstall" tabindex="-1">3. <code>uninstall</code> <a class="header-anchor" href="#_3-uninstall" aria-label="Permalink to &quot;3. `uninstall`&quot;">​</a></h3><p>卸载之前安装的工具版本。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.14.0</span></span></code></pre></div><h3 id="_4-pin" tabindex="-1">4. <code>pin</code> <a class="header-anchor" href="#_4-pin" aria-label="Permalink to &quot;4. `pin`&quot;">​</a></h3><p>固定项目的运行时或包管理器，将工具版本与项目关联起来，通常用于将版本写入 <code>package.json</code> 文件中的 <code>volta</code> 属性。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 在当前目录下设置 Node.js 16.14.0 为项目版本</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.14.0</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">全部</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">### 5. `list`</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">列出已安装的工具版本。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span></span></code></pre></div><h3 id="_6-completions" tabindex="-1">6. <code>completions</code> <a class="header-anchor" href="#_6-completions" aria-label="Permalink to &quot;6. `completions`&quot;">​</a></h3><p>输出 shell 的自动完成脚本，以便更方便地使用 Volta 命令，可以理解为命令补全</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 输出 Bash 自动完成脚本</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completions</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/bash_completion.d/volta</span></span></code></pre></div><h3 id="_7-which" tabindex="-1">7. <code>which</code> <a class="header-anchor" href="#_7-which" aria-label="Permalink to &quot;7. `which`&quot;">​</a></h3><p>显示指定工具的可执行文件路径，查看 volta 安装的工具的目录</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> which</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span></span></code></pre></div><h3 id="_8-setup" tabindex="-1">8. <code>setup</code> <a class="header-anchor" href="#_8-setup" aria-label="Permalink to &quot;8. `setup`&quot;">​</a></h3><p>初始化 Volta 的环境，包括安装和配置必要的组件，为当前用户/shell 启用 volta</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> setup</span></span></code></pre></div><h3 id="_9-help" tabindex="-1">9. <code>help</code> <a class="header-anchor" href="#_9-help" aria-label="Permalink to &quot;9. `help`&quot;">​</a></h3><p>输出帮助信息，显示特定命令的帮助文档。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 显示 `volta install` 的帮助</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><p>这些命令可以帮助你有效地管理和使用不同版本的工具，特别是在多项目环境中。</p><h2 id="五-一些常用命令" tabindex="-1">五. 一些常用命令 <a class="header-anchor" href="#五-一些常用命令" aria-label="Permalink to &quot;五. 一些常用命令&quot;">​</a></h2><h3 id="_1-安装版本" tabindex="-1">1. 安装版本 <a class="header-anchor" href="#_1-安装版本" aria-label="Permalink to &quot;1. 安装版本&quot;">​</a></h3><p>全局安装并设置默认版本，选择 node 的确切版本作为默认版本，例如安装并设置默认 node 版本为 v16.9.0</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta install node@16.9.0</span></span></code></pre></div><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/9711dfaa59e2413ba7d8c41f39fb79db~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1726119680&amp;x-orig-sign=38uPeM5rtTLY2QsRgW%2FZNdKGEAs%3D" alt="1.png"></p><p>如果你不指定一个精确的版本，Volta 会选择当前大版本下合适的版本来匹配你的请求:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta install node@18</span></span></code></pre></div><p>如果你不选择任何版本，Volta 将选择最新的 LTS 版本:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta install node</span></span></code></pre></div><h3 id="_2-查看版本" tabindex="-1">2. 查看版本 <a class="header-anchor" href="#_2-查看版本" aria-label="Permalink to &quot;2. 查看版本&quot;">​</a></h3><p>查看当前已经安装的 node 版本列表</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span></span></code></pre></div><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/f5aa17701cca4e87b1f85b44369341ad~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1726119680&amp;x-orig-sign=%2F52RGMkpDD7SiQ53gaNXyWFfmj0%3D" alt="2.png"></p><h3 id="_3-卸载版本" tabindex="-1">3. 卸载版本 <a class="header-anchor" href="#_3-卸载版本" aria-label="Permalink to &quot;3. 卸载版本&quot;">​</a></h3><p>指定某个 node 版本进行卸载</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node@16.9.0</span></span></code></pre></div><h2 id="六-实战-设置项目级别版本" tabindex="-1">六. 实战：设置项目级别版本 <a class="header-anchor" href="#六-实战-设置项目级别版本" aria-label="Permalink to &quot;六. 实战：设置项目级别版本&quot;">​</a></h2><p>Volta 是一个优秀的项目级别版本管理工具，它可以帮助你在不同的项目中使用特定版本的 Node.js、npm、yarn 和 pnpm。这对于维护多个项目，每个项目可能需要不同版本的这些工具的情况非常有用。</p><p>使用  <code>volta pin</code>  命令，将项目的运行时或包管理器设置为指定的版本。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">volta</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node@18.20.4</span></span></code></pre></div><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/57a63b994d5a4a5bb316d885ec2f77d1~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1726119680&amp;x-orig-sign=MMhVKjW9600D4f%2F3LJ5%2FG9oBRp0%3D" alt="4.png"></p><p>设置完成后，使用 <code>node -v</code> 可以查看当前项目的生效 node 版本</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/4960ec07db014b70bf477d2e1ba5da45~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1726119680&amp;x-orig-sign=KIzjGJerLxvsVskw%2FctxpUPRwLg%3D" alt="5.png"></p><p>通过上面的步骤，即可以实现项目级 node 环境的统一，只要是安装了 Volta 工具，任何开发该项目的团队成员都是使用在 package.json 中指定的 node 版本，确保所有开发人员都在同一 node 版本环境下进行开发。</p><h2 id="七-总结" tabindex="-1">七. 总结 <a class="header-anchor" href="#七-总结" aria-label="Permalink to &quot;七. 总结&quot;">​</a></h2><p>Volta 极大地简化了跨项目管理 Node.js 版本的过程，通过使用 Volta 管理项目级别的 Node.js 版本，我们可以确保每个项目都有一个干净且独立的开发环境。</p><p>这不仅有助于避免版本冲突问题，还能提高团队协作效率，确保所有开发人员都在同一环境下进行开发工作。因此，无论是对于个人开发者还是团队协作，都能显著提高开发效率和项目稳定性。</p><p>以下总结使用 Volta 的一些要点：</p><ul><li><p><strong>自动化</strong>: Volta 自动检测并安装项目所需的 Node.js 版本，无需手动切换。</p></li><li><p><strong>一致性</strong>: 确保所有团队成员使用相同的 Node.js 版本，减少潜在的错误。</p></li><li><p><strong>工具链管理</strong>: Volta 同时管理 npm、yarn 和 pnpm 的版本，简化了项目依赖的管理（不过目前我并没有管理过 pnpm，后面有机会尝试一下吧）。</p></li><li><p><strong>高效</strong>: 由于 Volta 的高性能特性，它能够更快地启动项目，提高开发效率。</p></li></ul><p>总之，Volta 为开发者提供了一个强大而灵活的解决方案，以应对多项目开发环境中的版本管理挑战。</p><p>官方文档：<a href="https://volta.sh/" target="_blank" rel="noreferrer">Volta Document</a></p>',77);function o(d,c,r,k,g,b){const a=n("ArticleFooter");return l(),i("div",null,[h,e(a,{link:"https://juejin.cn/post/7398747326069882889"})])}const v=s(p,[["render",o]]);export{F as __pageData,v as default};
