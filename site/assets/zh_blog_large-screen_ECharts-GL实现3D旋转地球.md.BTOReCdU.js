import{_ as i,c as a,I as n,aU as l,o as t,E as p}from"./chunks/framework.CpXV_ol5.js";const b=JSON.parse('{"title":"ECharts-GL 实战：轻松实现 3D 旋转地球","description":"","frontmatter":{"title":"ECharts-GL 实战：轻松实现 3D 旋转地球"},"headers":[],"relativePath":"zh/blog/large-screen/ECharts-GL实现3D旋转地球.md","filePath":"zh/blog/large-screen/ECharts-GL实现3D旋转地球.md","lastUpdated":1725606759000}'),h={name:"zh/blog/large-screen/ECharts-GL实现3D旋转地球.md"},e=l(`<h1 id="echarts-gl-实战-轻松实现-3d-旋转地球" tabindex="-1">ECharts-GL 实战：轻松实现 3D 旋转地球 <a class="header-anchor" href="#echarts-gl-实战-轻松实现-3d-旋转地球" aria-label="Permalink to &quot;ECharts-GL 实战：轻松实现 3D 旋转地球&quot;">​</a></h1><h2 id="一-前言" tabindex="-1">一. 前言 <a class="header-anchor" href="#一-前言" aria-label="Permalink to &quot;一. 前言&quot;">​</a></h2><p>在数据可视化的世界中，<strong>3D</strong> 旋转地球是一个令人着迷的高大上展示方式，它不仅能够呈现地球的外观，还能让我们以独特的视角观察地球上的各种信息。</p><p><strong>ECharts-GL</strong> 作为一款强大的可视化库，为我们实现 <strong>3D</strong> 旋转地球提供了简洁而高效的方式。通过其丰富的功能和灵活的配置选项，我们可以轻松地将地球呈现为一个栩栩如生的 3D 模型，并实现自由的旋转和交互。</p><p>在本篇文章中，我将向大家逐步介绍如何使用 <strong>ECharts-GL</strong> 最简洁的代码来创建一个 3D 旋转地球。我们将了解到 <strong>ECharts-GL</strong> 的一些基本概念和使用流程，以及如何利用其提供的工具和选项来定制地球的外观和行为。</p><p>通过简洁的代码示例，你可以看到如何快速搭建起一个 <strong>3D</strong> 旋转地球的框架，并了解到如何添加自己的数据和交互功能，让地球变得更加有趣和实用。</p><p>提前预览一下效果图，本文要实现的 <strong>3D</strong> 旋转地球效果如下图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e2163f8da3cf4091ba16032af6028844~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=924&amp;h=550&amp;s=4243894&amp;e=gif&amp;f=74&amp;b=121c4d" alt="globe.gif"></p><h2 id="二-了解-echarts-gl" tabindex="-1">二. 了解 ECharts-GL <a class="header-anchor" href="#二-了解-echarts-gl" aria-label="Permalink to &quot;二. 了解 ECharts-GL&quot;">​</a></h2><h3 id="_1-初识-echarts-gl" tabindex="-1">1. 初识 ECharts-GL <a class="header-anchor" href="#_1-初识-echarts-gl" aria-label="Permalink to &quot;1. 初识 ECharts-GL&quot;">​</a></h3><p><strong>ECharts-GL</strong> 是一个基于 <code>JavaScript</code> 的 <strong>3D</strong> 可视化库，它构建在 <code>ECharts</code> 的基础上，提供了更强大的 <strong>3D</strong> 绘图能力。<strong>ECharts-GL</strong> 扩展了 <code>ECharts</code> 的功能，使得我们能够创建丰富的 <strong>3D</strong> 可视化效果。</p><h3 id="_2-echarts-gl-能干什么" tabindex="-1">2. ECharts-GL 能干什么 <a class="header-anchor" href="#_2-echarts-gl-能干什么" aria-label="Permalink to &quot;2. ECharts-GL 能干什么&quot;">​</a></h3><p>通过 <strong>ECharts-GL</strong>，你可以以交互的方式展示和探索数据，它支持各种<strong>几何体</strong>、<strong>材质</strong>、<strong>光照</strong>和<strong>动画</strong>效果。这使得你可以创建逼真的 <strong>3D 场景</strong>，如<strong>地球仪</strong>、<strong>城市地图</strong>、<strong>建筑模型</strong>等。</p><p>该库提供了丰富的 API 和文档，方便开发者进行定制和集成。它具有高效的渲染性能和良好的兼容性，可以在各种现代浏览器中运行。</p><p>简言之，<strong>ECharts-GL</strong> 能够实现以下功能：</p><ol><li><p><strong>绘制 3D 图形</strong>：如 <strong>3D 柱状图</strong>、<strong>3D 折线图</strong>等。</p></li><li><p><strong>创建 3D 场景</strong>：包括<strong>地球</strong>、<strong>星空</strong>等。</p></li><li><p><strong>支持多种交互方式</strong>：如<strong>旋转</strong>、<strong>缩放</strong>、<strong>平移</strong>等。</p></li></ol><h3 id="_3-echarts-gl-与-echarts" tabindex="-1">3. ECharts-GL 与 ECharts <a class="header-anchor" href="#_3-echarts-gl-与-echarts" aria-label="Permalink to &quot;3. ECharts-GL 与 ECharts&quot;">​</a></h3><p><strong>ECharts-GL</strong> 与 <code>ECharts</code> 有着密切的关系：</p><ol><li><p><strong>ECharts-GL</strong> 是 ECharts 的扩展，它继承了 ECharts 的优势和特性。</p></li><li><p>使用 <strong>ECharts-GL</strong> 可以充分利用 ECharts 丰富的功能和社区资源。</p></li><li><p><strong>ECharts-GL</strong> 为 ECharts 增添了 3D 可视化的能力，使其在数据展示方面更加多样化。</p></li></ol><p><strong>ECharts-GL</strong> 是一个强大的工具，可用于创建 3D 可视化应用程序。如果你也对 3D 数据可视化感兴趣，并且十分熟悉 ECharts，那么 <strong>ECharts-GL</strong> 则是你值得探索的选择。</p><h2 id="三-构建-3d-地球" tabindex="-1">三. 构建 3D 地球 <a class="header-anchor" href="#三-构建-3d-地球" aria-label="Permalink to &quot;三. 构建 3D 地球&quot;">​</a></h2><h3 id="_1-导入-echarts-gl" tabindex="-1">1. 导入 ECharts-GL <a class="header-anchor" href="#_1-导入-echarts-gl" aria-label="Permalink to &quot;1. 导入 ECharts-GL&quot;">​</a></h3><p><strong>ECharts-GL</strong> 的 npm 地址：<a href="https://www.npmjs.com/package/echarts-gl" target="_blank" rel="noreferrer">echarts-gl npm</a></p><h4 id="npm-安装" tabindex="-1">npm 安装 <a class="header-anchor" href="#npm-安装" aria-label="Permalink to &quot;npm 安装&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echarts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echarts-gl</span></span></code></pre></div><h4 id="cdn-使用" tabindex="-1">cdn 使用 <a class="header-anchor" href="#cdn-使用" aria-label="Permalink to &quot;cdn 使用&quot;">​</a></h4><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- echarts 库 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/echarts@5.4.3/dist/echarts.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- echarts-gl 库 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://unpkg.com/echarts-gl@2.0.9/dist/echarts-gl.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="导入项目中" tabindex="-1">导入项目中 <a class="header-anchor" href="#导入项目中" aria-label="Permalink to &quot;导入项目中&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> as</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> echarts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echarts&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echarts-gl&#39;</span></span></code></pre></div><h3 id="_2-初始化-echarts-gl" tabindex="-1">2. 初始化 ECharts-GL <a class="header-anchor" href="#_2-初始化-echarts-gl" aria-label="Permalink to &quot;2. 初始化 ECharts-GL&quot;">​</a></h3><p>首先，我们先来了解一下 <strong>ECharts-GL</strong> 都提供了哪些配置，换句话说，了解好这些配置能够帮助我们来实现什么 3D 效果？</p><ul><li><p><code>globe</code>：地球组件。组件提供了地球的绘制以及相应的坐标系。</p></li><li><p><code>geo3D</code>：三维的地理坐标系组件。组件提供了三维 GeoJSON 的绘制以及相应的坐标系，</p></li><li><p><code>mapbox3D</code>：基于 mapbox-gl-js 的地理组件。</p></li><li><p><code>grid3D</code>：三维笛卡尔坐标系组件。需要和 xAxis3D，yAxis3D，zAxis3D 三个坐标轴组件一起使用。</p></li><li><p><code>xAxis3D</code>：三维笛卡尔坐标系中的 x 轴。</p></li><li><p><code>yAxis3D</code>：三维笛卡尔坐标系中的 y 轴。</p></li><li><p><code>zAxis3D</code>：三维笛卡尔坐标系中的 z 轴。</p></li><li><p><code>series</code>： 系列列表。每个系列通过 type 决定自己的图表类型。</p></li></ul><p>以上是 <strong>ECharts-GL</strong> 中主要的可配置对象，通过配置这些不同的对象，可以实现丰富的 3D 效果。</p><p>因为本篇文章还是主要介绍关于 <code>globe</code> 地球组件的相关配置，因此我们主要打交道的是 <code>globe</code> 对象，如下所示：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> globeChart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globeChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    globe: {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>通过以上简单的代码，就可以实现 3D 地球的初始模型，虽然有点丑，如下图所示：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cda5cd619ce4803a4e4bdeb69542013~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=821&amp;h=498&amp;s=294460&amp;e=png&amp;b=3d3d3d" alt="image.png"></p><p>接下来我们继续对它进行美化，所有的配置都基于 globe 配置项参数进行的美化！</p><h3 id="_3-一些基本配置" tabindex="-1">3. 一些基本配置 <a class="header-anchor" href="#_3-一些基本配置" aria-label="Permalink to &quot;3. 一些基本配置&quot;">​</a></h3><p>本文主要介绍一些关于 <code>globe</code> 球体的一些基本配置，目的是让大家能够轻松快捷的实现一个 3D 地球，主要涉及到以下配置参数：</p><ul><li><p><code>globe.baseTexture</code>：地球的纹理设置。</p></li><li><p><code>globe.environment</code>：地球的环境图片，类似于背景。</p></li><li><p><code>globe.light</code>：地球的光照相关的设置。</p></li><li><p><code>globe.viewControl</code>：用于鼠标的旋转，缩放等视角控制。</p></li></ul><p>当然，关于 <code>globe</code> 的相关配置参数有很多，这里无法进行一一介绍，只介绍几个重点的来进行相关配置。</p><p>如果你想要详细了解相关参数，可以查看官方文档，官方文档有更详尽的参数配置说明：<a href="https://echarts.apache.org/zh/option-gl.html#globe" target="_blank" rel="noreferrer">echarts-gl 官方文档</a></p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe69dcd29211407db032fe373cd26bd5~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1105&amp;h=516&amp;s=99688&amp;e=png&amp;b=fefefe" alt="image.png"></p><h4 id="设置纹理图片" tabindex="-1">设置纹理图片 <a class="header-anchor" href="#设置纹理图片" aria-label="Permalink to &quot;设置纹理图片&quot;">​</a></h4><p><code>globe.baseTexture</code> 主要用于地球的纹理设置。支持图片路径的字符串，图片或者 Canvas 的对象。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置图表的选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globeChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globe: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    baseTexture: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset/bg-earth.jpg&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3142ff7957234be59dd70f394d44f7f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=935&amp;h=482&amp;s=540983&amp;e=png&amp;b=132249" alt="image.png"></p><h4 id="设置环境纹理图片" tabindex="-1">设置环境纹理图片 <a class="header-anchor" href="#设置环境纹理图片" aria-label="Permalink to &quot;设置环境纹理图片&quot;">​</a></h4><p><code>globe.environment</code> 环境贴图。支持纯色、渐变色、全景贴图的 url。默认为 &#39;auto&#39;</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置图表的选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globeChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globe: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    environment: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;asset/starfield.jpg&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9da95872eff543319d8faad87f5cc942~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=972&amp;h=494&amp;s=205146&amp;e=png&amp;b=000000" alt="image.png"></p><h4 id="设置光照" tabindex="-1">设置光照 <a class="header-anchor" href="#设置光照" aria-label="Permalink to &quot;设置光照&quot;">​</a></h4><p><code>globe.light</code> 主要用于地球的光照设置，光照的设置会影响到组件以及组件所在坐标系上的所有图表。合理的光照设置能够让整个场景的明暗变得更丰富，更有层次。</p><blockquote><p>注意：光照相关的设置。在 shading 为 &#39;color&#39; 的时候无效。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置图表的选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globeChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globe: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    light: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 主光强度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      main: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        intensity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 是否产生阴影</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        shadow: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 环境光强度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ambient: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        intensity: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.6</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h4 id="视图控制配置" tabindex="-1">视图控制配置 <a class="header-anchor" href="#视图控制配置" aria-label="Permalink to &quot;视图控制配置&quot;">​</a></h4><p><code>globe.viewControl</code> 用于鼠标的旋转，缩放等视角控制。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">globeChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globe: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 视图控制配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    viewControl: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 初始视点位置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      center: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 初始纵横轴旋转角度（垂直角度）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      alpha: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 初始纵横轴旋转角度（水平角度）</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      beta: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 是否自动旋转</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      autoRotate: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 鼠标静止后自动旋转的时间间隔</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      autoRotateAfterStill: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 视角距离</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      distance: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 自动旋转速度</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      autoRotateSpeed: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">15</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/27a1ef719262407db306adabb6c364f6~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=945&amp;h=481&amp;s=2801648&amp;e=gif&amp;f=58&amp;b=010101" alt="globe-1.gif"></p><h2 id="四-定制地球外观" tabindex="-1">四. 定制地球外观 <a class="header-anchor" href="#四-定制地球外观" aria-label="Permalink to &quot;四. 定制地球外观&quot;">​</a></h2><p>以上我们使用的是地球的纹理图片作为整个地球的纹理背景，这种方式虽然是方便的，但是如果我们要做一些国家的交互功能，比如：数据展示、手势交互等，使用以上的方式可能不容易实现。</p><p>因此官方也提供了另一种方式：<code>globe.baseTexture</code> 支持直接使用 <code>ECharts</code> 的实例作为纹理，此时在地球上的鼠标动作会跟纹理上使用的 <code>ECharts</code> 实例有联动。</p><p>接下来我们继续来看一下：</p><h3 id="_1-注册地图" tabindex="-1">1. 注册地图 <a class="header-anchor" href="#_1-注册地图" aria-label="Permalink to &quot;1. 注册地图&quot;">​</a></h3><p>注册世界地图，需要世界地图的 json 数据，因此我们首先需要准备好 json 数据，准备好以后可以直接使用 registerMap 方法进行注册。</p><blockquote><p>说明：世界地图的 json 数据将在文末提供</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册地图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data)</span></span></code></pre></div><h3 id="_2-构建-echarts-世界地图" tabindex="-1">2. 构建 ECharts 世界地图 <a class="header-anchor" href="#_2-构建-echarts-世界地图" aria-label="Permalink to &quot;2. 构建 ECharts 世界地图&quot;">​</a></h3><ol><li><p>创建 <code>canvas</code> 元素。</p></li><li><p>初始化 <code>ECharts </code>实例，并将其绑定到创建的 <code>canvas</code> 元素上。</p></li><li><p>设置 <code>ECharts</code> 实例的配置选项。</p></li></ol><p>在指定的 <code>canvas</code> 元素上显示一个世界地图，并可以进行后续的地图相关操作和数据展示。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用 echarts 绘制世界地图的实例作为纹理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> canvas </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;canvas&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">var</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mapChart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(canvas, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  width: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4096</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2048</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  geo: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;map&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    map: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;world&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 绘制完整尺寸的 echarts 实例</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    top: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    left: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    right: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    bottom: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    boundingCoords: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">180</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">90</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置图表的选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  globe: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    baseTexture: mapChart</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>在以上的配置选项中，对几个重要的属性解释一下：</p><ul><li><code>geo</code>属性表示地理相关的配置。</li><li><code>type</code>属性指定为地图类型。</li><li><code>map</code>属性设置为世界地图。</li><li>通过设置<code>top</code>、<code>left</code>、<code>right</code>和<code>bottom</code>属性，将地图绘制在<code>canvas</code>元素的整个区域。</li><li><code>boundingCoords</code>属性指定了地图的边界坐标范围。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cd1bb8e5736f4bccbec2a86f4c48ace7~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=958&amp;h=481&amp;s=110952&amp;e=png&amp;b=333333" alt="image.png"></p><h3 id="_3-鼠标指向高亮" tabindex="-1">3. 鼠标指向高亮 <a class="header-anchor" href="#_3-鼠标指向高亮" aria-label="Permalink to &quot;3. 鼠标指向高亮&quot;">​</a></h3><p>定义地图元素在不同状态下的颜色、边框和标签显示等样式，添加鼠标指向地图区域时，国家的高亮显示，以提供更好的可视化效果和用户交互体验。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置图表的选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  geo: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    itemStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      borderWidth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      normal: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 未选中状态</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        borderColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rgba(255,255,255,0.7)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        areaColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rgba(0, 90, 171, 1)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        label: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          show: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 设置高亮状态下的多边形和标签样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    emphasis: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 设置区域样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      itemStyle: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        areaColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#602bdd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 高亮区域颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        borderColor: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#f29100&#39;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 描边颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>对以上代码的部分配置解释一下：</p><ol><li><p><code>geo</code> 对象中的 <code>itemStyle</code> 部分：</p><ul><li><code>borderWidth: 1</code>：设置地图元素的边框宽度为 1。</li><li><code>normal</code> 对象定义了未选中状态下的样式： <ul><li><code>borderColor: &quot;rgba(255,255,255,0.7)&quot;</code>：设置边框的颜色为半透明的白色。</li><li><code>areaColor: &quot;rgba(0, 90, 171, 1)&quot;</code>：设置区域的颜色为一种蓝色。</li><li><code>label</code> 对象的 <code>show: false</code> 表示不显示标签。</li></ul></li></ul></li><li><p><code>emphasis</code> 对象用于设置高亮状态下的样式：</p><ul><li><code>itemStyle</code> 对象中的 <code>areaColor: &quot;#602bdd&quot;</code> 定义了高亮区域的颜色。</li><li><code>borderColor: &quot;#f29100&quot;</code> 设置了描边的颜色为橙色。</li></ul></li></ol><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/91df63804e17433d98a96f9cff3016ea~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=906&amp;h=465&amp;s=135829&amp;e=png&amp;b=333333" alt="image.png"></p><h3 id="_4-加点数据" tabindex="-1">4. 加点数据 <a class="header-anchor" href="#_4-加点数据" aria-label="Permalink to &quot;4. 加点数据&quot;">​</a></h3><p>在之前的地图配置基础上添加了一个散点系列（<code>scatter</code>)，添加了一个散点数据，并设置了其在地图上的显示样式和标签信息。</p><blockquote><p>注意：这些散点可以根据你的实际数据需求进行自定义和更新，比如数据是试试获取的，等到获取成功后再此更新图表，可以提升用户体验！</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  series: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;scatter&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      coordinateSystem: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;geo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      label: { show: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      data: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          value: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">103.012761</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.113421</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          label: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            color: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;rgba(25, 228, 253, 1)&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            fontSize: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            fontWeight: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;bold&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            formatter: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;GDP：126.06万亿元&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>上述代码主要是在 <code>series</code> 数组中添加了一个对象，指定某个地区的经纬度，显示数据的配置信息：</p><ul><li><code>type: &quot;scatter&quot;</code>：指定系列类型为散点。</li><li><code>coordinateSystem: &quot;geo&quot;</code>：表示该散点系列在地理坐标系中展示。</li><li><code>label: { show: true }</code>：显示数据点的标签。</li><li><code>data</code> 数组定义了数据点的信息： <ul><li>每个数据点具有 <code>value</code> 属性，包含经度和纬度坐标。</li><li><code>label</code> 对象设置了标签的样式，包括颜色、字体大小、字体粗细和格式化函数。</li></ul></li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a83033c48c6d43dda18199ad940c5105~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=915&amp;h=494&amp;s=151258&amp;e=png&amp;b=333333" alt="image.png"></p><h3 id="_5-最终效果图预览" tabindex="-1">5. 最终效果图预览 <a class="header-anchor" href="#_5-最终效果图预览" aria-label="Permalink to &quot;5. 最终效果图预览&quot;">​</a></h3><p>按照以上的流程示例，可以实现以下的效果图，主要实现了功能如下：</p><ul><li>3D 球体的展示</li><li>基于 <code>ECharts</code> 世界地图 json 实现地球纹理展示</li><li>地球手势支持：旋转，放大，指向高亮</li><li>光照设置</li><li>数据展示</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/73d7c75622bd424fa20686ed50ff8c09~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=985&amp;h=546&amp;s=4946005&amp;e=gif&amp;f=80&amp;b=111b49" alt="globe-2.gif"></p><h3 id="_6-码上掘金演示" tabindex="-1">6. 码上掘金演示 <a class="header-anchor" href="#_6-码上掘金演示" aria-label="Permalink to &quot;6. 码上掘金演示&quot;">​</a></h3><p><a href="https://code.juejin.cn/pen/7376489234334482483" target="_blank" rel="noreferrer">jcode</a></p><h2 id="五-总结" tabindex="-1">五. 总结 <a class="header-anchor" href="#五-总结" aria-label="Permalink to &quot;五. 总结&quot;">​</a></h2><p>通过以上的流程演示，我们一步步循序渐进，相信大家都有了一个清晰的认识，使用 <strong>ECharts-GL</strong>，通过少量的配置和关键的函数调用，能够轻松创建一个逼真的 <strong>3D</strong> 地球模型，并实现其自由旋转，使我们能够以更直观和吸引人的方式呈现地理信息。</p><p><strong>ECharts-GL</strong> 的灵活性还允许我们进一步定制地球的外观、添加数据和交互功能，以满足不同的需求。无论是在地理信息展示、数据大屏可视化、全球信息统计还是其他领域，<strong>3D</strong> 旋转地球都能为用户带来独特的视觉体验。</p><p>当然，本文实现的地球功能并不复杂，然而却有意想不到的视觉效果，因此只要按照文档配置，相信你也可以通过使用 <strong>ECharts-GL</strong> 实现令人惊叹的 <strong>3D</strong> 可视化效果。</p><p>本文也只是抛砖引玉，这次的 <strong>3D</strong> 旋转地球示例只是其众多功能的一个展示，希望能激发大家进一步探索 <strong>ECharts-GL</strong> 的潜力，创造出更多丰富精彩的可视化作品。</p><h2 id="源码" tabindex="-1">源码 <a class="header-anchor" href="#源码" aria-label="Permalink to &quot;源码&quot;">​</a></h2><p><a href="https://code.juejin.cn/api/raw/7376489234334482483?id=7376489234334498867" target="_blank" rel="noreferrer">参考源码</a></p><p><a href="https://code.juejin.cn/api/raw/7376489234334482483?id=7376489234334531635" target="_blank" rel="noreferrer">世界地图 JSON 数据</a></p><h2 id="文档链接" tabindex="-1">文档链接 <a class="header-anchor" href="#文档链接" aria-label="Permalink to &quot;文档链接&quot;">​</a></h2><p><a href="https://echarts.apache.org/zh/option-gl.html#globe" target="_blank" rel="noreferrer">echarts-gl 官方文档</a></p><p><a href="https://www.npmjs.com/package/echarts-gl" target="_blank" rel="noreferrer">echarts-gl npm</a></p>`,105);function k(r,E,d,o,g,c){const s=p("ArticleFooter");return t(),a("div",null,[e,n(s,{link:"https://juejin.cn/post/7376213569442824203"})])}const m=i(h,[["render",k]]);export{b as __pageData,m as default};
