import{_ as i,c as a,I as n,aU as p,o as t,E as h}from"./chunks/framework.CpXV_ol5.js";const F=JSON.parse('{"title":"uni-app跳坑系列：谈谈我是如何提升安卓App扫码准确率的","description":"","frontmatter":{"title":"uni-app跳坑系列：谈谈我是如何提升安卓App扫码准确率的"},"headers":[],"relativePath":"zh/blog/uni-app/uni-app扫码优化-如何提升安卓App扫码准确率.md","filePath":"zh/blog/uni-app/uni-app扫码优化-如何提升安卓App扫码准确率.md","lastUpdated":1725606759000}'),l={name:"zh/blog/uni-app/uni-app扫码优化-如何提升安卓App扫码准确率.md"},e=p(`<h1 id="uni-app-跳坑系列-谈谈我是如何提升安卓-app-扫码准确率的" tabindex="-1">uni-app 跳坑系列：谈谈我是如何提升安卓 App 扫码准确率的 <a class="header-anchor" href="#uni-app-跳坑系列-谈谈我是如何提升安卓-app-扫码准确率的" aria-label="Permalink to &quot;uni-app 跳坑系列：谈谈我是如何提升安卓 App 扫码准确率的&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>之前的一个项目遭到用户吐槽：“<strong>你们这个 App 扫码的正确率太低了</strong>，尤其是<strong>安卓的设备</strong>。经常性的扫码扫不出来，就算是扫出来了，也是错误的结果！”</p><p>由于之前是扫描二维码的需求，所以没有对扫描条形码做严格的测试，客户提示说是条形码扫描效率低下。随即，我用自己的手机测试了一下，在安卓手机上确实有这样的问题，扫码准确率确实是低，尤其是条形码，扫码效率慢且不准确。扫描二维码的的效率还算可以，说的过去。</p><p>同一个 API，在小程序、Android、iOS 上的也会有差异，小程序和 iOS 设备上的扫码效率也属正常，唯独 Android 的机器略显尴尬。那么本篇文章我将和大家一起看一下如何在安卓的机器上提升一下扫码正确率吧！</p><h2 id="如何优化" tabindex="-1">如何优化 <a class="header-anchor" href="#如何优化" aria-label="Permalink to &quot;如何优化&quot;">​</a></h2><p>通过分析以上的这个问题，我们先分析一下是什么原因导致的这种异常现象：</p><ul><li>通过官方的 API 调用的扫码，是否官方就已经存在着这个问题？是否已经有了解决方案？</li><li>如果是我们自己开发一个原生的插件是否能解决当先的难题？</li></ul><p>通过以上的分析，我们分别从官方的角度和自定义的角度考虑一下这个问题的解决方案。</p><h2 id="官方策略" tabindex="-1">官方策略 <a class="header-anchor" href="#官方策略" aria-label="Permalink to &quot;官方策略&quot;">​</a></h2><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/648e28150a8d48ddb2796764ab6f99a5~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1147&amp;h=251&amp;s=34361&amp;e=png&amp;b=ffffff" alt="image.png"></p><p>调起客户端扫码，主要使用的是<code>uni.scanCode(OBJECT)</code>这个 API，查看官方的 API 说明，发现也没有特殊的差异性说明，也就是说：官方认为在 App 和小程序上的支持应该是一致的。</p><p>那我们就继续在看一下是不是我们使用的参数有问题？</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f61ddd858f344a8eb938848df2f1e7bc~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1246&amp;h=551&amp;s=144901&amp;e=png&amp;b=ffffff" alt="image.png"></p><p>从上面图片可以看出，对 App 来说，能够配置影响扫码的 API 有：</p><ul><li><code>scanType</code>：扫码类型</li><li><code>autoDecodeCharset</code>：是否启用自动识别字符编码功能，默认为否</li><li><code>autoZoom</code>：是否启用自动放大，默认启用</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dc9fb002fe8544618e8315354bc826a9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=273&amp;h=273&amp;s=18986&amp;e=png&amp;b=ffffff" alt="image.png"></p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调起条码扫描</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scanType: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qrCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;barCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;pdf417&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  autoDecodeCharset: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;条码类型：&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.scanType)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;条码内容：&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>如上代码所示：<code>scanType</code> 添加支持了<code>qrCode</code>和<code>barCode</code>两种类型，也就是支持二维码、条形码、<code>PDF417</code>条码</p><p>重新打包后测试，发现改善效果甚微，可以说是没有改变，仍然扫码效率低下。</p><p>既然，使用官方的 API 优化并没有明显的改善效果，我们考虑一下别的方式呢？比如：使用封装的原生 API 方法。</p><h2 id="自定义策略" tabindex="-1">自定义策略 <a class="header-anchor" href="#自定义策略" aria-label="Permalink to &quot;自定义策略&quot;">​</a></h2><p>经过查找资料了解到：App-vue 如果想自定义扫码，有以下几种方式：</p><ul><li>使用 Html 5+ 的 Barcode 模块管理条码（一维码和二维码）扫描识别 <a href="https://www.html5plus.org/doc/zh_cn/barcode.html" target="_blank" rel="noreferrer">查看链接</a>。</li><li>自己封装一个安卓原生扫码 API：使用 zxing 插件等。</li></ul><p>直接说明我自己的做法，采用了自定义封装的（zxing）安卓原生扫码 API，可以说是解决了扫码低下的问题： 首先，时间和精力有限，没有自己封装，而是从插件应用市场搜索到一个开发者已经封装好的扫码原生插件，直接使用的，下面通过以下几个步骤看一下是如何使用的：</p><h3 id="_1-导入插件" tabindex="-1">1. 导入插件 <a class="header-anchor" href="#_1-导入插件" aria-label="Permalink to &quot;1. 导入插件&quot;">​</a></h3><p>将插件下载后放入 uni-app 的 nativeplugins 目录下，<a href="https://github.com/anyup/juejin-up/tree/master/src/nativeplugins" target="_blank" rel="noreferrer">下载地址</a></p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1784b416104443a28b4cbe0c8f2edcfe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=428&amp;h=125&amp;s=10996&amp;e=png&amp;b=fcf9e6" alt="image.png"></p><h3 id="_2-在-manifest-json-中配置插件" tabindex="-1">2. 在 manifest.json 中配置插件 <a class="header-anchor" href="#_2-在-manifest-json-中配置插件" aria-label="Permalink to &quot;2. 在 manifest.json 中配置插件&quot;">​</a></h3><p>如下图所示，在 manifest.json 图形化配置菜单中点击 App 原生插件配置，选择本地插件进行配置 <img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9295a91290cb4c9aa4da485ee9b55485~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1011&amp;h=705&amp;s=184615&amp;e=png&amp;b=fcf7ee" alt="image.png"></p><h3 id="_3-添加权限" tabindex="-1">3. 添加权限 <a class="header-anchor" href="#_3-添加权限" aria-label="Permalink to &quot;3. 添加权限&quot;">​</a></h3><p>要使用安卓手机正常调用起摄像头进行扫码，需要添加对应的权限，这是必不可少的。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.CAMERA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-feature android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.hardware.camera&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-feature android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.hardware.camera.autofocus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.VIBRATE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.FLASHLIGHT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h3 id="_4-参数格式说明" tabindex="-1">4. 参数格式说明 <a class="header-anchor" href="#_4-参数格式说明" aria-label="Permalink to &quot;4. 参数格式说明&quot;">​</a></h3><table><thead><tr><th>参数名</th><th>说明</th><th>默认值</th><th>可选值</th></tr></thead><tbody><tr><td>scanType</td><td>扫码类型</td><td>null</td><td>PDF_417、CODE_128 等</td></tr><tr><td>prompt</td><td>扫码提示语</td><td>-</td><td>-</td></tr><tr><td>locked</td><td>方向是否锁定、旋转</td><td>true</td><td>true 或 false</td></tr></tbody></table><h3 id="_5-返回格式说明" tabindex="-1">5. 返回格式说明 <a class="header-anchor" href="#_5-返回格式说明" aria-label="Permalink to &quot;5. 返回格式说明&quot;">​</a></h3><table><thead><tr><th>参数名</th><th>参数说明</th></tr></thead><tbody><tr><td>success</td><td>扫码状态</td></tr><tr><td>scanType</td><td>返回的扫码类型</td></tr><tr><td>result</td><td>扫码结果信息</td></tr></tbody></table><h3 id="_6-使用方式" tabindex="-1">6. 使用方式 <a class="header-anchor" href="#_6-使用方式" aria-label="Permalink to &quot;6. 使用方式&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 引入插件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myScanCode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requireNativePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My-ScanCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 插件配置参数</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  scanType: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CODE_128&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;QR_CODE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  prompt: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;提示：将条形码/二维码图片对准扫描框即可自动扫描&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  locked: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 开始扫码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myScanCode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;true&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 扫码成功</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 扫码异常</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>通过以上的几个步骤，我们就将原生扫码插件引入到我们项目中，并且配置成功后正常使用了。</p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6862f56168fc4f3a876ff0bff3197982~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=413&amp;h=888&amp;s=56257&amp;e=png&amp;b=010101" alt="image.png" width="40%"><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e4ec0b8fb0246ff8908d2645208dcbe~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=413&amp;h=888&amp;s=552523&amp;e=png&amp;b=bcb3bd" alt="image.png" width="40%"><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h2><p>由于本次优化仅限于对安卓平台的优化，我们使用的插件也是针对于安卓平台的，因此需要平台差异化编码，让代码在安卓环境下进行，其他比如小程序、iOS 环境还是继续使用<code>uni.scanCode</code> 这个 API</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // #ifdef APP-PLUS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSystemInfoSync</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().platform </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;android&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myScanCode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requireNativePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;My-ScanCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          scanType: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;CODE_128&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;QR_CODE&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          prompt: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;提示：将条形码/二维码图片对准扫描框即可自动扫描&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          locked: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        myScanCode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">          if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.success </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;true&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res.result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            reject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          onlyFromCamera: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          scanType: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;barCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qrCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res.result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // #endif</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // #ifndef APP-PLUS</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scanCode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        onlyFromCamera: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        scanType: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;barCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qrCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">          resolve</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(res.result)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // #endif</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>通过以上的差异性编码优化，就可以放心的使用了，不用担心兼容性问题了，使用方式如下：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">scanCode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 扫码成功后逻辑处理</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><p>以上就是之前在项目中遇到的扫码问题。虽然时隔已经很长时间了，但是目前的代码运行良好，二维码和条形码的识别能力也有个质的提升。</p><p>由于当时开发较早，插件市场的插件寥寥无几，而且后来也发现了一款更优秀的原生扫码插件，拥有更优秀且强大的识别能力和识别速度，对<strong>弱光</strong>、<strong>反光</strong>、<strong>模糊</strong>的二维码也具有优秀的识别能力。</p><p>后续的文章我将会继续对其它扫码插件进行说明，看一下其他优秀的扫码插件是如何使用的，敬请关注！</p>`,51);function k(E,r,d,g,c,o){const s=h("ArticleFooter");return t(),a("div",null,[e,n(s,{link:["juejin::https://juejin.cn/post/7300789760702824474","weixin::https://mp.weixin.qq.com/s/3c9IafKHtokl0wxqdjzJ8A"]},null,8,["link"])])}const u=i(l,[["render",k]]);export{F as __pageData,u as default};
