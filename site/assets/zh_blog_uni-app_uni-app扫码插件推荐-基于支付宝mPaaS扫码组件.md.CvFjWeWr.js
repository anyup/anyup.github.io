import{_ as s,c as i,I as t,aU as n,o as p,E as e}from"./chunks/framework.CpXV_ol5.js";const E=JSON.parse('{"title":"uni-app扫码插件推荐：基于支付宝mPaaS扫码组件进行开发","description":"","frontmatter":{"title":"uni-app扫码插件推荐：基于支付宝mPaaS扫码组件进行开发"},"headers":[],"relativePath":"zh/blog/uni-app/uni-app扫码插件推荐-基于支付宝mPaaS扫码组件.md","filePath":"zh/blog/uni-app/uni-app扫码插件推荐-基于支付宝mPaaS扫码组件.md","lastUpdated":1725606759000}'),l={name:"zh/blog/uni-app/uni-app扫码插件推荐-基于支付宝mPaaS扫码组件.md"},r=n(`<h1 id="uni-app-扫码插件推荐-基于支付宝-mpaas-扫码组件进行开发" tabindex="-1">uni-app 扫码插件推荐：基于支付宝 mPaaS 扫码组件进行开发 <a class="header-anchor" href="#uni-app-扫码插件推荐-基于支付宝-mpaas-扫码组件进行开发" aria-label="Permalink to &quot;uni-app 扫码插件推荐：基于支付宝 mPaaS 扫码组件进行开发&quot;">​</a></h1><h2 id="一-前言" tabindex="-1">一. 前言 <a class="header-anchor" href="#一-前言" aria-label="Permalink to &quot;一. 前言&quot;">​</a></h2><p>之前说到，我的一个 uni-app 项目遭到用户吐槽：“<strong>你们这个 App 扫码的正确率太低了</strong>，尤其是<strong>安卓的设备</strong>。经常性的扫码扫不出来，就算是扫出来了，也是错误的结果！”</p><p>面对以上这个问题，我在当时的项目是使用了一个基于安卓原生 <code>zxing</code> 扫码插件实现的，虽然扫码效率可观，但是它也有一些弊端，比如：<strong>仅支持安卓设备</strong>，<strong>不支持苹果设备</strong>，<strong>样式不是特别好看</strong>，<strong>反光二维码识别会有影响</strong>等等，详细了解请参考我之前写过的一篇文章：</p><p><a href="https://juejin.cn/post/7300789760702824474" target="_blank" rel="noreferrer">uni-app 跳坑系列：谈谈我是如何提升安卓 App 扫码准确率的</a></p><p>今天这篇文章，我们继续探索一下是否还有其他更优秀的插件，可以给我们在 uni-app 的项目中提供流畅的扫码服务，之前在开发项目的过程中，确实发现一款相对更优秀的原生扫码插件，它拥有更优秀且强大的识别能力和识别速度，对<strong>弱光</strong>、<strong>反光</strong>、<strong>模糊</strong>的<strong>二维码</strong>也具有优秀的识别能力，接下来我们来具体的看一下吧！</p><h2 id="二-mpaas-扫码组件" tabindex="-1">二. mPaaS 扫码组件 <a class="header-anchor" href="#二-mpaas-扫码组件" aria-label="Permalink to &quot;二. mPaaS 扫码组件&quot;">​</a></h2><p>mPaaS 扫码组件是支付宝的扫码组件，目的是可以让我们的 APP 拥有像支付宝一样的扫码体验，识别速度、识别率远超开源扫码。扫码组件完全免费提供使用，但是接入时需要在阿里云上进行注册开通并将 mPaaS 扫码添加到项目工程即可</p><h2 id="三-创建-mpaas-应用" tabindex="-1">三. 创建 mPaaS 应用 <a class="header-anchor" href="#三-创建-mpaas-应用" aria-label="Permalink to &quot;三. 创建 mPaaS 应用&quot;">​</a></h2><h3 id="_1-开通阿里云-mpaas" tabindex="-1">1. 开通阿里云 mPaaS <a class="header-anchor" href="#_1-开通阿里云-mpaas" aria-label="Permalink to &quot;1. 开通阿里云 mPaaS&quot;">​</a></h3><p>登录阿里云控制台，找到<strong>移动开发平台 mPaaS</strong>进入，或直接访问  <a href="https://www.aliyun.com/product/mobilepaas/mpaas" target="_blank" rel="noreferrer">移动开发平台 mPaaS</a> 产品页面就可以直接进入。</p><p>之后点击 “<strong>管理控制台</strong>”，进入 “<strong>开通产品</strong>” 页面。点击 “<strong>立即开通</strong>”，就可以开通 mPaaS 产品。</p><p>以上我们就完成了第一步，开通阿里云 mPaaS，接下来我们需要进行创建应用了。</p><h3 id="_2-创建-mpaas-应用" tabindex="-1">2. 创建 mPaaS 应用 <a class="header-anchor" href="#_2-创建-mpaas-应用" aria-label="Permalink to &quot;2. 创建 mPaaS 应用&quot;">​</a></h3><p>开通后您需要<a href="https://mpaas.console.aliyun.com/#/mpaas/dashboard" target="_blank" rel="noreferrer">创建一个 mPaaS 应用</a></p><p>简单维护好<strong>应用名称</strong>和<strong>应用 LOGO</strong>就完成了开启 mPaaS 接入的第一步</p><p>将 mPaaS 接入到我的应用，1 分钟快速完成 App 代码配置</p><p>配置过程中主要包含以下四个步骤：</p><ol><li><p>维护应用信息</p><ul><li>主要是应用的名称及 Logo，感觉没什么用，可以跳过省略。</li></ul></li><li><p>下载配置文件</p><ul><li><p>填写配置信息，完成上传签名 APK，然后“<strong>下载配置文件</strong>”到本地，进行代码配置，需要上传签名后的 APK 文件，输入应用包名 Package Name</p></li><li><p>这一步很重要，配置完成后，下载配置文件中有我们要用到的一些信息。</p></li></ul></li></ol><ul><li>Android 代码配置：</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ec5750c1d0e43029a97807ee7c18851~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1177&amp;h=675&amp;s=124147&amp;e=png&amp;b=fefefe" alt="image.png"></p><ul><li>iOS 代码配置：</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/812aeff63dd0479d9ad2614ce2a592f3~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1169&amp;h=478&amp;s=99038&amp;e=png&amp;b=959595" alt="image.png"></p><ol start="3"><li><p>mPaaS 基线选择：</p><ul><li>如果你是 Android 或 iOS 原生开发人员，可能你更倾向于自己开发 uni-app 原生插件，可以选择 mPaaS 某些基线功能，但如果我们仅是作为 uni-app 开发人员，不熟悉原生开发，这一步也可以进行忽略。</li></ul></li></ol><p>简单说一下 mPaaS 基线的含义，基线是指一系列功能的稳定版本的集合，是进一步开发的基础。而 mPaaS 产品是基于支付宝的某个特定版本开发的，因此对于 mPaaS 而言，基线则是所基于版本的 SDK 的集合。随着 mPaaS 产品的不断升级，会出现多个版本的基线。</p><ol start="4"><li><p>IDE 组件配置</p><ul><li>Android：主要是基于原生 AAR 方式使用 Android Studio mPaaS 插件</li></ul></li></ol><blockquote><p>说明：在以上的接入步骤中，最重要的就是第 2 步，在接下来的配置插件步骤中需要我们使用配置文件中的信息。</p></blockquote><h2 id="四-在-uni-app-中接入-mpaas-插件" tabindex="-1">四. 在 uni-app 中接入 mPaaS 插件 <a class="header-anchor" href="#四-在-uni-app-中接入-mpaas-插件" aria-label="Permalink to &quot;四. 在 uni-app 中接入 mPaaS 插件&quot;">​</a></h2><h3 id="_1-下载封装好的-mpaas-原生扫码插件" tabindex="-1">1. 下载封装好的 mPaas 原生扫码插件 <a class="header-anchor" href="#_1-下载封装好的-mpaas-原生扫码插件" aria-label="Permalink to &quot;1. 下载封装好的 mPaas 原生扫码插件&quot;">​</a></h3><p>下载地址：<a href="https://gitee.com/anyup/juejin-up/blob/master/plugins/Mpaas-Scan_1.2.3.zip" target="_blank" rel="noreferrer">进入页面，点击下载</a></p><p>下载完成后，将 Zip 压缩包解压后，放入 uni-app 应用目录 <code>nativeplugins</code> 下</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5a1ca555d76f4d3da67e2253e3a71eb2~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=417&amp;h=124&amp;s=8661&amp;e=png&amp;b=faf7e2" alt="image.png"></p><h3 id="_2-修改插件的-config-信息" tabindex="-1">2. 修改插件的 config 信息 <a class="header-anchor" href="#_2-修改插件的-config-信息" aria-label="Permalink to &quot;2. 修改插件的 config 信息&quot;">​</a></h3><h4 id="android" tabindex="-1">Android <a class="header-anchor" href="#android" aria-label="Permalink to &quot;Android&quot;">​</a></h4><p>这一步需要将第三部分中“<strong>创建 mPaaS 应用</strong>”中第 2 步已经下载的好的<code>config</code>配置文件信息同步到插件的<code>package.json</code>中，如下图所示：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c26962470a504583afb762aa36be38aa~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1658&amp;h=506&amp;s=219175&amp;e=png&amp;b=1e1e1e" alt="Snipaste_2023-12-12_16-28-49.png"></p><h4 id="ios" tabindex="-1">iOS <a class="header-anchor" href="#ios" aria-label="Permalink to &quot;iOS&quot;">​</a></h4><p>和 Android 同样的，将下载好的的 config 文件，重命名为 <code>meta.config</code>，然后将这个文件放入到 uni-app 项目中，</p><p>具体路径为：<code>/项目名称/nativeplugins/Mpaas-Scan/ios/meta.config</code></p><h3 id="_3-在-manifest-json-中选择本地插件" tabindex="-1">3. 在 manifest.json 中选择本地插件 <a class="header-anchor" href="#_3-在-manifest-json-中选择本地插件" aria-label="Permalink to &quot;3. 在 manifest.json 中选择本地插件&quot;">​</a></h3><p>如下图所示，在 manifest.json 图形化配置菜单中点击 App 原生插件配置，选择本地插件进行配置</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e187fbb65f0a4b6fbe8a10414ff3118c~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=932&amp;h=639&amp;s=157366&amp;e=png&amp;b=fdf6ee" alt="Snipaste_2023-12-12_16-30-43.png"></p><h3 id="_4-在-manifest-json-中配置插件" tabindex="-1">4. 在 manifest.json 中配置插件 <a class="header-anchor" href="#_4-在-manifest-json-中配置插件" aria-label="Permalink to &quot;4. 在 manifest.json 中配置插件&quot;">​</a></h3><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c7674520dfd24ca6825f9136dd32f535~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=960&amp;h=525&amp;s=117616&amp;e=png&amp;b=fdf8e7" alt="Snipaste_2023-12-12_16-32-21.png"></p><h3 id="_5-添加权限" tabindex="-1">5. 添加权限 <a class="header-anchor" href="#_5-添加权限" aria-label="Permalink to &quot;5. 添加权限&quot;">​</a></h3><h4 id="android-1" tabindex="-1">Android <a class="header-anchor" href="#android-1" aria-label="Permalink to &quot;Android&quot;">​</a></h4><p>这一步不要忘记，因为要使用安卓手机正常调用起摄像头进行扫码，需要添加对应的权限，这是必不可少的。</p><p>Android 一般需要如下的权限：</p><ol><li><p><strong>CAMERA 权限</strong>：允许应用程序访问设备的摄像头，用于拍照和录像功能。</p></li><li><p><strong>WRITE_EXTERNAL_STORAGE 权限</strong>：允许应用程序写入外部存储，用于保存文件和数据。</p></li><li><p><strong>android.hardware.camera 特性</strong>：表明设备拥有相机功能，应用程序可以使用该功能进行拍照和录像等操作。</p></li><li><p><strong>android.hardware.camera.autofocus 特性</strong>：表明设备支持自动对焦功能，用于相机拍摄时自动调整焦距。</p></li><li><p><strong>FLASHLIGHT 权限</strong>：允许应用程序控制设备闪光灯，用于手电筒功能和拍照时的补光。</p></li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.CAMERA&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-feature android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.hardware.camera&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-feature android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.hardware.camera.autofocus&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;uses-permission android:name=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;android.permission.FLASHLIGHT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div><h4 id="ios-1" tabindex="-1">iOS <a class="header-anchor" href="#ios-1" aria-label="Permalink to &quot;iOS&quot;">​</a></h4><p>同样的，iOS 也需要添加部分权限说明，用于应用第一次使用涉及到用户隐私的功能是弹出授权确认框上显示的信息，提交 App store 审核时此信息必须准确描述获取此权限的原因。</p><p>如下图所示：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e830ef248d34c72accb193c43a04e3a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1180&amp;h=299&amp;s=83194&amp;e=png&amp;b=fdfaeb" alt="image.png"></p><h2 id="五-在-uni-app-项目中使用插件" tabindex="-1">五. 在 uni-app 项目中使用插件 <a class="header-anchor" href="#五-在-uni-app-项目中使用插件" aria-label="Permalink to &quot;五. 在 uni-app 项目中使用插件&quot;">​</a></h2><h3 id="_1-使用方式" tabindex="-1">1. 使用方式 <a class="header-anchor" href="#_1-使用方式" aria-label="Permalink to &quot;1. 使用方式&quot;">​</a></h3><p>在 uni-app 项目中，我们可以进行如下使用：</p><ul><li>引入插件</li><li>调用插件方法</li><li>处理方法返回结果</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 引入原生插件</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mpaasScanModule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">requireNativePlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Mpaas-Scan-Module&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 调用插件的 mpaasScan 方法</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mpaasScanModule.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mpaasScan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 扫码识别类型，参数可多选，qrCode、barCode，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 如不设置，默认识别所有扫码类型，可能有些许影响识别效率</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    scanType: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;qrCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;barCode&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 是否隐藏相册，默认false不隐藏</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hideAlbum: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">  ret</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    uni.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">showModal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;扫码结果&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 返回值中，有三个参数 resp_code、resp_message、resp_result</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // resp_code 表示返回结果值，10：用户取消，11：其他错误，1000：成功</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // resp_message 表示返回结果信息</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // resp_result 表示扫码结果，只有成功才会有返回</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      content: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ret),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      showCancel: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      confirmText: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;确定&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="_2-api-参数说明" tabindex="-1">2. API 参数说明 <a class="header-anchor" href="#_2-api-参数说明" aria-label="Permalink to &quot;2. API 参数说明&quot;">​</a></h3><p>以下是 mPaaS 官方 API 调用时提供的方法入参、返回值和 code 错误码说明</p><h4 id="入参" tabindex="-1">入参 <a class="header-anchor" href="#入参" aria-label="Permalink to &quot;入参&quot;">​</a></h4><table><thead><tr><th>名称</th><th>类型</th><th>必填</th><th>描述</th></tr></thead><tbody><tr><td>scanType</td><td>String</td><td>否</td><td>扫码识别类型，默认值为  <code>[&#39;qrCode&#39;,&#39;barCode&#39;]</code>。</td></tr><tr><td>hideAlbum</td><td>Boolean</td><td>否</td><td>是否隐藏相册（不允许从相册选择图片，只能从相机扫码），默认值为 false。</td></tr><tr><td>success</td><td>Function</td><td>否</td><td>调用成功的回调函数</td></tr><tr><td>fail</td><td>Function</td><td>否</td><td>调用失败的回调函数</td></tr><tr><td>complete</td><td>Function</td><td>否</td><td>调用结束的回调函数（调用成功、失败都会执行）</td></tr></tbody></table><h4 id="success-返回值" tabindex="-1">success 返回值 <a class="header-anchor" href="#success-返回值" aria-label="Permalink to &quot;success 返回值&quot;">​</a></h4><table><thead><tr><th>名称</th><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>code</td><td>String</td><td>扫码所得数据</td></tr><tr><td>qrCode</td><td>String</td><td>扫描二维码时返回二维码数据</td></tr><tr><td>barCode</td><td>String</td><td>扫描条形码时返回条形码数据</td></tr></tbody></table><h4 id="错误码" tabindex="-1">错误码 <a class="header-anchor" href="#错误码" aria-label="Permalink to &quot;错误码&quot;">​</a></h4><table><thead><tr><th>error</th><th>描述</th><th>解决方案</th></tr></thead><tbody><tr><td>10</td><td>用户取消</td><td>为用户正常交互流程分支，不需要进行特殊处理。</td></tr><tr><td>11</td><td>操作失败</td><td>具体原因需要查看客户端协助排查。</td></tr></tbody></table><h3 id="_3-app-演示" tabindex="-1">3. APP 演示 <a class="header-anchor" href="#_3-app-演示" aria-label="Permalink to &quot;3. APP 演示&quot;">​</a></h3><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d9d359e624194827acce5d215835e04f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1297&amp;h=718&amp;s=299680&amp;e=png&amp;b=fefefe" alt="image.png"></p><p>如果你想要体验 APP 的扫码想过，请下载我的 APP 进行体验，体验路径为：<strong>首页</strong> -&gt; <strong>工具类</strong> -&gt; <strong>mPaaS 扫码</strong>，下载链接如下：</p><p><a href="https://www.pgyer.com/anyup-demo" target="_blank" rel="noreferrer">下载 Anyup Demo 安卓版进行体验</a></p><h2 id="参考文档" tabindex="-1">参考文档 <a class="header-anchor" href="#参考文档" aria-label="Permalink to &quot;参考文档&quot;">​</a></h2><p><a href="https://help.aliyun.com/document_detail/49549.html?spm=a2c4g.165212.0.0.66762a9dEzJcn7" target="_blank" rel="noreferrer">mPaas 官方文档</a></p><p><a href="https://ext.dcloud.net.cn/plugin?id=2636" target="_blank" rel="noreferrer">uni-app 支付宝原生扫码插件</a></p>`,74);function h(o,d,k,c,g,m){const a=e("ArticleFooter");return p(),i("div",null,[r,t(a,{link:["juejin::https://juejin.cn/post/7312358144924188722","weixin::https://mp.weixin.qq.com/s/RelllOXpwJLzMTXdlZl5vw"]},null,8,["link"])])}const f=s(l,[["render",h]]);export{E as __pageData,f as default};
