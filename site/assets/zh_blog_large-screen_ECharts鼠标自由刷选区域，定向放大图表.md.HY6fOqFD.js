import{_ as i,c as a,I as n,aU as h,o as p,E as l}from"./chunks/framework.CpXV_ol5.js";const u=JSON.parse('{"title":"产品需求：ECharts鼠标自由刷选区域，定向放大图表","description":"","frontmatter":{"title":"产品需求：ECharts鼠标自由刷选区域，定向放大图表"},"headers":[],"relativePath":"zh/blog/large-screen/ECharts鼠标自由刷选区域，定向放大图表.md","filePath":"zh/blog/large-screen/ECharts鼠标自由刷选区域，定向放大图表.md","lastUpdated":1725606759000}'),t={name:"zh/blog/large-screen/ECharts鼠标自由刷选区域，定向放大图表.md"},e=h(`<h1 id="产品需求-echarts鼠标自由刷选区域-定向放大图表" tabindex="-1">产品需求：ECharts鼠标自由刷选区域，定向放大图表 <a class="header-anchor" href="#产品需求-echarts鼠标自由刷选区域-定向放大图表" aria-label="Permalink to &quot;产品需求：ECharts鼠标自由刷选区域，定向放大图表&quot;">​</a></h1><h2 id="一-背景" tabindex="-1">一. 背景 <a class="header-anchor" href="#一-背景" aria-label="Permalink to &quot;一. 背景&quot;">​</a></h2><p>在 ECharts 中，图表开发属于最基础的组件开发，适合统计展示各种各样的数据，使用图形化的效果将海量数据直观的展示给用户，以便于让用户能够快速获取到数据展示及走向。但随着用户需求的不断迭代，我们最近的一个项目需求是：</p><p>需要将曲线图表的某一段曲线细致的呈现给用户，具体方式为：<strong>用户通过鼠标随意框选区域，进而放大展示所框选区域内的数据图表</strong>。</p><p>提前预览效果图如下：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcd9b71aac2f43b8bdc7065792fea18e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=965&amp;h=517&amp;s=1274945&amp;e=gif&amp;f=135&amp;b=fefefe" alt="record-line.gif"></p><p>当涉及到框选区域选择并实现定向缩放的需求时，这是一个对于定向查看某段数据来说是非常实用的功能。通过框选区域实现定向缩放，可以帮助用户更方便地查看感兴趣的数据细节，提升数据可视化的交互性和用户体验。</p><p>在本篇文章中，我将介绍如何通过 ECharts 的 <code>brush</code> 和 <code>dataZoom</code> 组件结合使用，实现在图表中进行框选区域选择，并实现定向缩放的功能。</p><h2 id="二-初步分析" tabindex="-1">二. 初步分析 <a class="header-anchor" href="#二-初步分析" aria-label="Permalink to &quot;二. 初步分析&quot;">​</a></h2><h3 id="_1-初步缩放功能" tabindex="-1">1. 初步缩放功能 <a class="header-anchor" href="#_1-初步缩放功能" aria-label="Permalink to &quot;1. 初步缩放功能&quot;">​</a></h3><p>老生常谈，其实这个就是正常的图表缩放的需求，ECharts 提供了最基础的配置图表缩放属性，ECharts 的 <code>dataZoom</code> 组件 用于区域缩放，通过配置 <code>dataZoom</code> 属性实现曲线缩放。从而能自由关注细节的数据信息，或者概览数据整体，或者去除离群点的影响。</p><p>其中，最核心的代码如下所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dataZoom: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dataZoomX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;slider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      xAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dataZoomY&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;slider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      yAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>配置完成后，通过鼠标滚轮放大或者拖动 x 轴或 y 轴滑块缩放图表，效果如下所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f57713cdfe5b446c80e89271357a488b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=965&amp;h=517&amp;s=704434&amp;e=gif&amp;f=67&amp;b=fefefe" alt="record-line 2.gif"></p><p>关于 ECharts <code>dataZoom</code> 配置项，如需更详细的使用，请参考 ECharts 官方文档：<a href="https://echarts.apache.org/zh/option.html#dataZoom" target="_blank" rel="noreferrer">ECharts dataZoom 配置项参考</a></p><h3 id="_2-探讨其他方案" tabindex="-1">2. 探讨其他方案 <a class="header-anchor" href="#_2-探讨其他方案" aria-label="Permalink to &quot;2. 探讨其他方案&quot;">​</a></h3><p>很显然，以上的这种方案也是开发者最常使用的缩放功能，通过简单的配置 <code>dataZoom</code> 属性，可以实现在坐标轴的 x 轴或 y 轴添加缩放滑块，使用鼠标滚轮放大或者拖动滑块实现对曲线图的放大和缩小。但是这种却不是产品需求所需要的，还需要探索其他的方案来完成。</p><p>通过查询 ECharts 官方文档配置项手册，可以发现 ECharts 也提供了其他的方案可以实现曲线图的区域放大，主要有两种方案：</p><ul><li><p>配置 <code>toolbox</code> 工具栏</p></li><li><p>使用 <code>brush</code> 区域选择组件</p></li></ul><p>接下来，我将对这两种方案进行详细的方案实现和对比，马上开始吧！</p><h2 id="三-方案一-配置-toolbox-工具栏" tabindex="-1">三. 方案一：配置 toolbox 工具栏 <a class="header-anchor" href="#三-方案一-配置-toolbox-工具栏" aria-label="Permalink to &quot;三. 方案一：配置 toolbox 工具栏&quot;">​</a></h2><p>通过配置 <code>toolbox</code> 工具栏，可以实现对图表数据区域定向缩放功能。</p><p><code>toolbox</code> 为 ECharts 的工具栏，内置有导出图片，数据视图，动态类型切换，数据区域缩放，重置五个工具，如下所示：</p><ul><li><p>导出图片：<code>saveAsImage</code></p></li><li><p>数据视图：<code>dataView</code></p></li><li><p>动态类型切换：<code>magicType</code></p></li><li><p>数据区域缩放：<code>dataZoom</code></p></li><li><p>重置：<code>restore</code></p></li></ul><p>关于 <code>toolbox</code> 工具栏，主要有以上五种。其中，关于区域缩放的工具，就只有 <code>dataZoom</code> 了，因此，第一种实现方案就是配置 <code>toolbox</code> 的 <code>dataZoom</code> 组件，可以实现数据区域缩放，官方目前只支持直角坐标系的缩放。</p><p>这种方案相对特别简单，只需要简单的配置一下工具栏，使其工具生效就可以使用框选区域放大了，代码如下所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    toolbox: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      feature: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        saveAsImage: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 导出图片</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dataView: { readOnly: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数据视图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        magicType: { type: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] }, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 动态类型切换</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        dataZoom: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数据区域缩放</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        restore: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>配置好以上的工具栏以后，演示效果如下图所示：</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/be01564163444b16868c9ab8b492afe5~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=882&amp;h=511&amp;s=1488909&amp;e=gif&amp;f=113&amp;b=fefdfd" alt="toolbox demo.gif"></p><p>关于更多的 ECharts <code>toolbox</code> 工具栏的其他配置项，本篇文章不做过多的解释，详细请参考官方文档：<a href="https://echarts.apache.org/zh/option.html#toolbox" target="_blank" rel="noreferrer">ECharts toolbox 配置项</a></p><h2 id="四-方案二-使用-brush-区域选择组件" tabindex="-1">四. 方案二：使用 <code>brush</code> 区域选择组件 <a class="header-anchor" href="#四-方案二-使用-brush-区域选择组件" aria-label="Permalink to &quot;四. 方案二：使用 \`brush\` 区域选择组件&quot;">​</a></h2><p>其实通过以上介绍的这种方案，完全就可以实现刷选区域定向放大图表的需求，按理说文章到这也可以收尾了。但是本着探索的态度，我的好奇心驱使我继续探索是否还有其他的方案实现这种功能。</p><p>通过继续查询资料，可以发现，ECharts 还提供了 <code>brush</code> 区域选择组件，用户可以选择图中一部分数据，可以对框选的数据进行自定义操作。</p><p>原本，<code>brush</code> 区域选择组件是为了便于向用户展示被选中数据，或者基于被选中的数据做一些统计计算结果。但是，我们我们这里根据产品需求，也可以实现根据选择的区域，定向的放大图表，就是可能需要额外的处理一下刷选事件，再次触发图标行为，使其放大。</p><p>因此，第二种方法相对繁琐一些，我总结了以下几个步骤可以使用 <code>brush</code> 实现刷选放大功能。</p><ul><li><p>配置 <code>brush</code> 刷子</p></li><li><p>监听回调事件</p></li><li><p>放大图表区域</p></li></ul><p>接下来，我将会对以上这几个步骤进行一一说明。</p><h3 id="_1-配置-brush-刷子" tabindex="-1">1. 配置 brush 刷子 <a class="header-anchor" href="#_1-配置-brush-刷子" aria-label="Permalink to &quot;1. 配置 brush 刷子&quot;">​</a></h3><p><strong>配置刷子的类型和启动按钮</strong></p><p>目前 <code>brush</code> 组件支持的图表类型：<code>scatter</code>、<code>bar</code>、<code>candlestick</code>（<code>parallel</code> 本身自带刷选功能，但并非由 <code>brush</code> 组件来提供）。点击 <code>toolbox</code> 中的按钮，能够进行『<strong>区域选择</strong>』、『<strong>清除选择</strong>』等操作。</p><p>例如：在 <code>bar</code> 图中的 <code>brush</code> 效果（点击 <code>toolbox</code> 中的按钮启动刷选），可以进行选择 <code>bar</code>。</p><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2f652a1e72184432a57e46cae90644e9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=805&amp;h=364&amp;s=331997&amp;e=gif&amp;f=73&amp;b=fefefe" alt="record-bar.gif"></p><p>看到这里，我不仅有个疑问，<code>brush</code> 不支持折线图？？将信将疑，先不管，继续向下进行。</p><p><strong>配置刷子刷选形状</strong></p><p>目前刷子支持这几种选框：矩形刷子，任意形状刷子，横向刷子，纵向刷子，<code>brush</code> 相关的 <code>toolbox</code> 按钮如下所示：</p><ul><li><p><code>rect</code>：矩形刷子，开启矩形选框选择功能。</p></li><li><p><code>polygon</code>：任意形状刷子，开启任意形状选框选择功能。</p></li><li><p><code>lineX</code>：横向刷子，开启横向选择功能。</p></li><li><p><code>lineY</code>：纵向刷子，开启纵向选择功能。</p></li><li><p><code>keep</code>：切换『<strong>单选</strong>』和『<strong>多选</strong>』模式。后者可支持同时画多个选框。前者支持单击清除所有选框。</p></li><li><p><code>clear</code>：清空所有选框。</p></li></ul><p>在这里，我们主要使用矩形刷子或横向刷子，它们两个的主要区别在于：</p><ul><li><p><strong>横向刷子</strong>：主要支持 x 轴的框选操作</p></li><li><p><strong>矩形刷子</strong>：以矩形的形式可以在 x 轴、y 轴进行任意框选</p></li></ul><p>通过代码配置选择使用刷子形状</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  brush: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    toolbox: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lineX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;clear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置使用矩形刷子、横向刷子、清除选项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>通过以上的少量配置，我们就实现了使用 <code>brush</code> 刷子框选曲线的功能，但是仅限于框选，框选完成后没有任何操作。效果如下图所示：</p><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e127ba0222643509fb00052894df70f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=927&amp;h=529&amp;s=57682&amp;e=png&amp;b=ffffff" alt="image.png"></p><p>关于更多的 <code>brush</code> 刷子个性化的配置，请参考：<a href="https://echarts.apache.org/zh/option.html#brush" target="_blank" rel="noreferrer">ECharts brush 配置项</a></p><h3 id="_2-监听回调事件" tabindex="-1">2. 监听回调事件 <a class="header-anchor" href="#_2-监听回调事件" aria-label="Permalink to &quot;2. 监听回调事件&quot;">​</a></h3><p>以上的阶段，我们仅仅实现了使用 <code>brush</code> 刷子框选曲线的功能，但是框选完成后我们应该怎么做？这才是重中之重，我们继续向下看。</p><p>通过查阅文档，官方文档也提供了 <code>brush</code> 的相关回调函数，这这里我们主要能使用到的有以下两个事件：</p><ul><li><p><code>events.brushselected</code>：在 <code>setOption</code> 时不会发出，在其他的 <code>dispatchAction</code> 时，或者用户在界面中创建、删除、修改选框时会发出。</p></li><li><p><code>events.brushEnd</code>：“选框添加完毕”事件。即发出 <code>brushEnd action</code> 得到的事件。</p></li></ul><p>简言之：在使用 <code>brush</code> 进行框选过程中会不断触发 <code>brushselected</code> 事件，在框选结束之后会触发 <code>brushEnd</code> 事件。</p><p>因此，在我们对曲线框选结束之后，对所框选的内容进行解析，获取到用户实际的框选数据，然后进行放大曲线。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 刷选过程触发事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brushselected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brushselected&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 刷选完毕事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brushEnd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brushEnd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, params);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>使用上述代码监听刷选事件，得到的回调输出如下所示：</p><blockquote><p>以上的 <code>brushselected</code> 有性能问题，下述会讲解如何优化这个性能问题</p></blockquote><p>监听到刷选事件后，我们可以对其返回的数据进行解析，根据 <code>coordRange</code> 计算框选区域内的 x 轴和 y 轴坐标系的 <code>startValue</code> 和 <code>endValue</code>，然后根据 <code>startValue</code> 和 <code>endValue</code> 进行放大曲线点位。</p><p>具体代码如下所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brushEnd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params.areas.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 根据 coordRange 计算框选区域内的x坐标的startValue和endValue，然后根据startValue和endValue进行放大曲线点位</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xAxisRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.areas[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].coordRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> yAxisRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.areas[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].coordRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xstartValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//x 轴 startValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xendValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//x 轴 endValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ystartValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//y轴 startValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> yendValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//y轴 endValue</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x轴：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xstartValue, xendValue);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;y轴：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ystartValue, yendValue);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><blockquote><p>提示：在目前的应用场景下，<code>brushEnd</code> 和 <code>brushselected</code> 事件可以二选其一，在这里我使用的 <code>brushEnd</code> 事件。</p></blockquote><p>关于更多的 ECharts brush 的相关回调事件，请参考：<a href="https://echarts.apache.org/zh/api.html#events.brush" target="_blank" rel="noreferrer">ECharts brush 回调事件 API</a></p><p>以上操作，我们获取并解析成功，得到了刷选区域的 x 轴和 y 轴的坐标数据，根据这些数据，就可以适时的放大曲线。在进行下一步操作之前，我们先来优化一下使用 <code>brushSelected</code> 事件而导致的性能问题。</p><h3 id="_3-避免性能问题" tabindex="-1">3. 避免性能问题 <a class="header-anchor" href="#_3-避免性能问题" aria-label="Permalink to &quot;3. 避免性能问题&quot;">​</a></h3><p>默认情况，刷选或者移动选区的时候，会不断得触发 <code>brushSelected</code> 事件，从而告诉外界选中的内容。</p><p>但是频繁的事件可能导致性能问题，或者动画效果很差。所以 <code>brush</code> 组件提供了 <code>brush.throttleType</code>，<code>brush.throttleDelay</code> 来解决这个问题。</p><p><strong>brush.throttleType 取值说明：</strong></p><ul><li><p><code>debounce</code>：表示只有停止动作了（即一段时间没有操作了），才会触发事件。</p></li><li><p><code>fixRate</code>：表示按照一定的频率触发事件。</p></li></ul><p><strong>brush.throttleDelay 取值说明：</strong></p><ul><li><p>数值为毫秒数，例如：500 表示为 500 毫秒。</p></li><li><p>默认为 0 表示不开启 <code>throttle</code>。</p></li></ul><blockquote><p>注意：<code>brush.throttleType</code> 时间阈值或时间间隔由 <code>brush.throttleDelay</code> 指定。</p></blockquote><p>通过配置 <code>brush.throttleType</code> 和 <code>brush.throttleDelay</code>，可以解决性能问题，代码配置如下所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  brush: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    toolbox: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;lineX&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;clear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 配置使用rect、lineX、clear</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throttleType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debounce&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 指定为 debounce 模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throttleDelay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表示按照 500ms 的频率触发事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><ul><li>未配置防抖优化时，在进行刷选图表操作时，可以看见事件触发的密集度。</li></ul><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/94fc8c4601c1445f8b8ff4ce349e8f2a~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1005&amp;h=422&amp;s=319842&amp;e=gif&amp;f=37&amp;b=fefefe" alt="record-line 3.gif"></p><ul><li>配置 <code>brush.throttleType</code> 和 <code>brush.throttleDelay</code> 后，再次进行刷选图表，可以发现已经没有频繁的事件触发。</li></ul><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/625644dd68954a04b0a19cdbd6a8a905~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1005&amp;h=422&amp;s=197281&amp;e=gif&amp;f=25&amp;b=fefefe" alt="record-line 4.gif"></p><h3 id="_4-放大图表区域" tabindex="-1">4. 放大图表区域 <a class="header-anchor" href="#_4-放大图表区域" aria-label="Permalink to &quot;4. 放大图表区域&quot;">​</a></h3><p>曲线的配置项 <code>option</code> 中有 <code>dataZoom</code> 属性，主要用于区域缩放，关于 <code>dataZoom</code> 的配置，可以配置数据窗口范围，主要通过以下属性：</p><ul><li><p><code>start</code>：数据窗口范围的起始百分比。范围是：0 ~ 100。表示 0% ~ 100%。</p></li><li><p><code>end</code>：数据窗口范围的结束百分比。范围是：0 ~ 100。</p></li><li><p><code>startValue</code>：数据窗口范围的起始数值。</p></li><li><p><code>endValue</code>：数据窗口范围的结束数值。</p></li></ul><p>关于以上数据更详细的解释，你可以继续阅读官方文档：<a href="https://echarts.apache.org/zh/option.html#dataZoom-slider.start" target="_blank" rel="noreferrer">ECharts dataZoom 数据窗口范围配置项</a></p><p>通过以上两组数据，start 和 end 为一组数据，startValue 和 endValue 为一组数据，我们就可以实现曲线窗口的缩放。有以下两种思路可以实现图表放大：</p><ul><li><p>第一种，通过 setOption 重新给曲线设置 option，修改 dataZoom 属性，更新为最新的数据</p></li><li><p>第二种，通过 dispatchAction 触发图表行为，修改数据区域缩放 dataZoom</p></li></ul><p>在这里我主要使用的 startValue 和 endValue，因为在上面的步骤中，通过对刷选区域回调数据的解析，我们已经得到的数据就是 startValue 和 endValue，因此接下来，我分别对这两种方案进行实现说明：</p><p><strong>第一种：通过 setOption 更新 option，放大图表</strong></p><p>通过 <code>setOption</code> 更新曲线 option 的 <code>dataZoom</code> 属性，修改 x 轴和 y 轴的 <code>startValue</code> 和 <code>endValue</code></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dataZoom: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      xAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 控制x轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      startValue: startValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// x轴起始数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      endValue: endValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// x轴结束数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      yAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 控制y轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      startValue: ystartValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// y轴起始数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      endValue: yendValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// y轴结束数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><strong>第二种：通过 dispatchAction 触发图表行为，放大图表</strong></p><p><code>dispatchAction</code> 为触发图表行为，例如图例开关 <code>legendToggleSelect</code>, 数据区域缩放 <code>dataZoom</code>，显示提示框 <code>showTip</code> 等等。</p><p><code>payload</code> 参数可以通过 batch 属性同时触发多个行为，在这里我们也会使用 batch 同时触发 x 轴和 y 轴的放大。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatchAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dataZoom&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  batch: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 第一个 dataZoom 组件，x轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      startValue: startValue,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      endValue: endValue,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 第二个 dataZoom 组件，y轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      startValue: ystartValue,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      endValue: yendValue,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p>关于 <code>dispatchAction</code> 图表行为，更多的详细信息请参考 <a href="https://echarts.apache.org/zh/api.html#echartsInstance.dispatchAction" target="_blank" rel="noreferrer">ECharts dispatchAction 图表行为 API</a></p><h2 id="五-两种方案对比" tabindex="-1">五. 两种方案对比 <a class="header-anchor" href="#五-两种方案对比" aria-label="Permalink to &quot;五. 两种方案对比&quot;">​</a></h2><p>先回顾一下，通过以上的介绍，可以有两种方案实现刷选区域放大的功能：</p><ul><li><p>方案一：配置 <code>toolbox</code> 工具栏，添加 <code>dataZoom</code> 缩放组件</p></li><li><p>方案二：使用 <code>brush</code> 刷子区域选择组件</p></li></ul><ol><li><p>方案一简单快捷，只需要简单配置 <code>toolbox</code> 工具栏，即可实现刷选放大功能。</p></li><li><p>方案二流程复杂，定制化需求高，可能会出现不明确的 bug。</p></li></ol><p>如果您仅仅是需要刷选放大图表，建议选择方案一；如果您不仅需要放大图表，还需要对刷选区域进行统计数据，建议使用方案二，能够统计计算框内数据，适合定制化统计展示。</p><h2 id="六-注意事项" tabindex="-1">六. 注意事项 <a class="header-anchor" href="#六-注意事项" aria-label="Permalink to &quot;六. 注意事项&quot;">​</a></h2><ol><li>在使用 brush 进行刷选或者移动选区的时候，会不断得触发 <code>brushSelected</code> 事件，需要进行节流或防抖事件，避免性能问题。</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  brush: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throttleType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debounce&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 指定为 debounce 模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throttleDelay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 表示按照 500ms 的频率触发事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><ul><li>可以使用官方的配置项，但需要注意 <code>brush.throttleType</code> 时间阈值或时间间隔由 <code>brush.throttleDelay</code> 指定，不指定会失效。</li><li>也可以使用防抖或节流函数，是同样的性能优化原理，关于防抖和节流，参考：<a href="https://juejin.cn/post/7270532002733228068" target="_blank" rel="noreferrer">前端性能优化 ｜ 防抖与节流</a></li></ul><ol start="2"><li>在使用 brush 刷选区域结束并完成区域放大后，需要主动清除所有选框，否则，曲线图上则会存在选框区域未清除。</li></ol><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatchAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brush&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  areas: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><ol start="3"><li>注意缩放选区的 <code>start</code>、<code>end</code>、<code>startValue</code>、<code>endValue</code> 对应的值的含义，它们是有区别的。</li></ol><ul><li><p><code>start</code> 和 <code>end</code> 为一组，表示数据窗口范围的起始和结束百分比，表示缩放滑块处于当前坐标轴的百分比</p></li><li><p><code>startValue</code> 和 <code>endValue</code> 为一组，表示数据窗口范围的起始和结束数值，可以设置为数组值本身，也可以设置为数组的 <code>index</code>，但是如果设置为数组值本身，会在内部自动转化为数组的 <code>index</code></p></li></ul><ol start="4"><li>特别注意：注意 ECharts 版本的差异性</li></ol><p>本文所有的演示示例代码，所使用的 ECharts 版本为 5.4.3，目前官方已经发布了 5.5 的版本。可能在项目中也有用到其他版本的，如果有在项目中使用同样的配置代码但图表效果展示不一致，请先排查一下是否为 ECharts 版本不一致导致的问题，不同的 ECharts 版本可能在使用方式上会有所差异。</p><h2 id="七-总结" tabindex="-1">七. 总结 <a class="header-anchor" href="#七-总结" aria-label="Permalink to &quot;七. 总结&quot;">​</a></h2><p>通过以上流程性的介绍和学习，按照顺序仔细阅读的话，相信大家对于实现通过鼠标框选区域，放大数据图表的功能有一个清晰的思路，主要有两种方案进行选择，</p><p>如果需要快速的使用刷选功能而尽量少的改动代码，就使用方案一：使用 <code>toolbox</code> 配置 <code>dataZoom</code> 区域放大组件，简单快捷，使用方便。如果不仅想要刷选区域放大，还需要对刷选区域进行统计数据，则需要定制使用 <code>brush</code> 刷子，但同时要注意代码的性能优化。</p><p>本篇文章到这就结束了，希望能够帮助你更好地理解和使用 ECharts，以上为项目经验所得，如果有任何错误，敬请指出!</p><blockquote><p>如果您感觉文章还不错，点个赞再走吧！</p></blockquote><h3 id="文档资料链接" tabindex="-1">文档资料链接 <a class="header-anchor" href="#文档资料链接" aria-label="Permalink to &quot;文档资料链接&quot;">​</a></h3><p><a href="https://echarts.apache.org/zh/option.html" target="_blank" rel="noreferrer">ECharts 配置项手册：https://echarts.apache.org/zh/option.html</a></p><p><a href="https://echarts.apache.org/zh/api.html" target="_blank" rel="noreferrer">ECharts API 文档：https://echarts.apache.org/zh/api.html</a></p><p><a href="https://anyup.gitee.io/juejin-up/src/echarts/brush-dataZoom-line.html" target="_blank" rel="noreferrer">体验 Demo 地址 1</a></p><p><a href="https://anyup.gitee.io/juejin-up/src/echarts/brush-dataZoom-demo.html" target="_blank" rel="noreferrer">体验 Demo 地址 2</a></p><h3 id="完整代码-option" tabindex="-1">完整代码 option <a class="header-anchor" href="#完整代码-option" aria-label="Permalink to &quot;完整代码 option&quot;">​</a></h3><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 随机生成一些图表数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Array.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ length: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">_</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Date.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">UTC</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 60</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toISOString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">slice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">19</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">replace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;T&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot; &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Math.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">random</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 完整 option</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tooltip: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    trigger: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;axis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  toolbox: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    feature: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      dataZoom: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      restore: {},</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  brush: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throttleType: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debounce&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    throttleDelay: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">500</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    xAxisIndex: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    toolbox: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rect&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;clear&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  xAxis: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;time&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  yAxis: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;value&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;温度(°C)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    min: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    max: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  dataZoom: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;slider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], start: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, end: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    { type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;slider&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, yAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], start: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, end: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  series: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;温度(°C)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;line&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    smooth: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //  随机生成数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    data: data,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 基于准备好的dom，初始化echarts实例</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myChart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用刚指定的配置项和数据显示图表。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(option);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brushEnd&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 判断是否有框选区域</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params.areas.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(params);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 根据 coordRange 计算框选区域内的x坐标的startValue和endValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xAxisRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.areas[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].coordRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> yAxisRange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.areas[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">].coordRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xstartValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//x 轴 startValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> xendValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//x 轴 endValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ystartValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//y轴 startValue</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> yendValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> yAxisRange[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//y轴 endValue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;x轴：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, xstartValue, xendValue);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;y轴：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ystartValue, yendValue);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 图表行为，根据startValue和endValue进行放大图表区域</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    dataZoom: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        xAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 控制x轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        startValue: xstartValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// x轴起始数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        endValue: xendValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// x轴结束数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        yAxisIndex: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 控制y轴</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        startValue: ystartValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// y轴起始数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        endValue: yendValue, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// y轴结束数值</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 如果 areas 为空，则删除所有选框。否则，曲线图上则会存在选框区域未清除</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dispatchAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brush&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    areas: [],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div>`,125);function k(E,r,d,o,c,g){const s=l("ArticleFooter");return p(),a("div",null,[e,n(s,{link:"juejin::https://juejin.cn/post/7342861726001594419"})])}const F=i(t,[["render",k]]);export{u as __pageData,F as default};
