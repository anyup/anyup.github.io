import{_ as a,c as i,I as n,aU as p,o as l,E as t}from"./chunks/framework.CpXV_ol5.js";const y=JSON.parse('{"title":"解析 uni-app 小程序分包策略：合理优化包体积分布","description":"","frontmatter":{"title":"解析 uni-app 小程序分包策略：合理优化包体积分布"},"headers":[],"relativePath":"zh/blog/uni-app/uni-app小程序分包策略-合理优化包体积分布.md","filePath":"zh/blog/uni-app/uni-app小程序分包策略-合理优化包体积分布.md","lastUpdated":1725606759000}'),e={name:"zh/blog/uni-app/uni-app小程序分包策略-合理优化包体积分布.md"},h=p(`<h1 id="解析-uni-app-小程序分包策略-合理优化包体积分布" tabindex="-1">解析 uni-app 小程序分包策略：合理优化包体积分布 <a class="header-anchor" href="#解析-uni-app-小程序分包策略-合理优化包体积分布" aria-label="Permalink to &quot;解析 uni-app 小程序分包策略：合理优化包体积分布&quot;">​</a></h1><h2 id="引言" tabindex="-1">引言 <a class="header-anchor" href="#引言" aria-label="Permalink to &quot;引言&quot;">​</a></h2><p>微信小程序的流行使得越来越多的开发者投入到小程序的开发中。但是，随着项目规模的增大，小程序的性能也会面临一些挑战。其中，小程序分包策略是提升性能的重要一环。</p><p>同时，uni-app 的流行也使众多的移动端开发者选择使用 uni-app 框架来开发移动端应用，因为开发者编写一套代码，可发布到 iOS、Android、Web（响应式）、以及各种小程序（微信/支付宝/百度/头条/飞书/QQ/快手/钉钉/淘宝）、快应用等多个平台，极大的提高了应用生产效率。</p><p>纵然 uni-app 支持众多的小程序平台，由于在开发中，我们主要的还是开发的微信小程序，所以本文将会以微信小程序分包为例，介绍微信小程序分包策略的原理和实现，以及如何根据项目特点和需求，制定合理的分包策略，从而优化性能，提升用户体验。而其他多家的小程序将不进行过多的说明。</p><h2 id="一-为什么要分包" tabindex="-1">一. 为什么要分包 <a class="header-anchor" href="#一-为什么要分包" aria-label="Permalink to &quot;一. 为什么要分包&quot;">​</a></h2><p>微信小程序之所以需要分包，主要是为了解决小程序官方限制了主包体积和总体积的大小，如果应用体积超限，我们将不能发布到应用官方，最终会上不了线。</p><p>其次，不仅是由于官方有这个限制，本着用户体验的角度来思考问题，我们也必须要有做分包优化的操作，因为合理的分包可以有以下几个好处：</p><ol><li><p><strong>提高首页加载速度</strong>：随着小程序项目规模的增大，首页所需的代码和资源也会越来越多，导致首页加载时间变长，影响用户体验。通过分包，可以将部分代码和资源拆分到其他子包中，在首页加载时只需加载必需的核心代码，从而减少首页的加载时间。</p></li><li><p><strong>优化性能</strong>：小程序的性能对用户体验至关重要。通过分包，可以将一些与首页无关的功能模块或页面、大型资源文件等拆分到子包中，子包的使用也可以帮助有效减少小程序包的体积，提升小程序的加载速度。</p></li><li><p><strong>分包预下载</strong>：分包可以提前加载用户即将使用的功能模块，从而加快跳转到对应页面的速度。通过合理的分包策略和预下载机制，可以在用户交互前就将页面所需的代码和资源提前加载好，确保用户流畅的使用体验。</p></li></ol><p>其实说到底，微信小程序的分包功能主要是为了能够更好地管理代码和资源，减少主包的体积，能够正常上线，同时优化小程序的性能和用户体验。合理使用分包可以减少首页的加载时间，升整体性能，控制包体大小，并通过预下载机制加快页面的跳转速度，提供快速的体验效果。</p><h2 id="二-制定合理的分包策略" tabindex="-1">二. 制定合理的分包策略 <a class="header-anchor" href="#二-制定合理的分包策略" aria-label="Permalink to &quot;二. 制定合理的分包策略&quot;">​</a></h2><p>小程序包拆分为主包和子包，其中主包包含了小程序的首页和一些常用基础功能模块，而子包则包含了其他功能模块和页面。主包在用户第一次打开小程序时会被下载和加载，而子包则根据需要来动态下载和加载。</p><p>制定合理的小程序分包策略可以提升小程序的性能和用户体验。以下是一些制定分包策略的建议：</p><ol><li><strong>根据功能模块拆分</strong></li></ol><p>将小程序的功能模块拆分成不同的子包。比如：tabbar 模块、用户模块、推送模块等等。</p><ol start="2"><li><strong>根据资源引用拆分</strong></li></ol><p>自定义组件、JS 文件、静态资源仅被一个分包使用时则把它划为同一个分包中，如果是公共的资源被各个分包使用，则将其划为主包子云啊</p><ol start="3"><li><strong>分包预下载配置</strong></li></ol><p>通过分包预下载机制，在用户需要时能够快速加载，配置 preloadRule 后，在进入小程序某个页面时，由框架自动预下载可能需要的分包，提升进入后续分包页面时的启动速度，减少用户等待时间，提升用户体验。</p><h2 id="三-具体操作" tabindex="-1">三. 具体操作 <a class="header-anchor" href="#三-具体操作" aria-label="Permalink to &quot;三. 具体操作&quot;">​</a></h2><h3 id="_1-确定分包结构" tabindex="-1">1. 确定分包结构 <a class="header-anchor" href="#_1-确定分包结构" aria-label="Permalink to &quot;1. 确定分包结构&quot;">​</a></h3><p>确定分包结构是重中之重，这就和建筑房屋一样，只要框架搭好了，其他的就都好办了。这里的分包结构就相当于框架，理清楚这里的结构，后面的就会特别简单。</p><p>以下是在实际项目中分包目录，主要进行了以下的拆解：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/68308dc351074373908a555e378d830f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=618&amp;h=547&amp;s=42228&amp;e=png&amp;b=191919" alt="image.png"></p><p><strong>分包原则说明</strong></p><p>每个子包下的目录包含按照下面的原则来划分：</p><ul><li><strong>静态文件</strong>：分包下支持 static 等静态资源拷贝，即分包目录内放置的静态资源不会被打包到主包中，也不可在主包中使用</li><li><strong>js 文件</strong>：当某个 js 仅被一个分包引用时，该 js 会被打包到该分包内，否则仍打到主包（即被主包引用，或被超过 1 个分包引用）</li><li><strong>自定义组件</strong>：若某个自定义组件仅被一个分包引用时，且未放入到分包内，编译时会输出提示信息</li></ul><p>我们抽出几个<strong>重点的目录</strong>来进行说明</p><ul><li>主包：首页、tabbar 页面 <ul><li>首页、tabbar 标签栏页面必须存在于主包下</li></ul></li><li>子包：（用户模块） <ul><li>所有的都是与用户相关的功能</li><li>下属目录结构分为：pages、static、components</li></ul></li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">┌─components        </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主包组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─pages             </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 主包页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─tabbar         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// tabBar 模块</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─ ├─index</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─ ├─message</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─ └─center</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─pagesUser         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分包：用户模块</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─components     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分包：组件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─static         </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分包：静态资源</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  └─pages          </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 分包：页面</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─pagesApLink</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─static</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  └─pages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─pagesCenter</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  ├─static</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">│  └─pages</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─static</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─main.js</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─App.vue</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">├─manifest.json</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">└─pages.json</span></span></code></pre></div><h3 id="_2-配置-pages-json" tabindex="-1">2. 配置 pages.json <a class="header-anchor" href="#_2-配置-pages-json" aria-label="Permalink to &quot;2. 配置 pages.json&quot;">​</a></h3><p>我们在完成好了分包目录的创建以后，接下来就可以着手进行 pages 页面路由配置了，正确配置才会使最终的分包生效。</p><p>在根目录下的 <code>pages.json</code> 文件中，使用<code>subPackages</code>字段来配置分包的信息。在<code>subPackages</code>中可以定义每个子包的路径、名称和需要包含的页面。</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/tabbar/index&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;subPackages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pagesUser&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/profile&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pagesApLink&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/link&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pagesCenter&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;pages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">          &quot;path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/center&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;tabBar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;list&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pagePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/tabbar/index&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pagePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/tabbar/message&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;pagePath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pages/tabbar/center&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_3-分包预载配置" tabindex="-1">3. 分包预载配置 <a class="header-anchor" href="#_3-分包预载配置" aria-label="Permalink to &quot;3. 分包预载配置&quot;">​</a></h3><p>假如子包的体积也过大，那么初次从主包页面进入子包页面的时候就会特别慢（这里只是做一种假设），需要用户进行等待，那么我们想要减少用户的这种等待时间，那么分包预下载的功能就能解决这个问题。</p><p>因此，分包预下载是提前将子包的代码和资源下载到用户设备上，从而在用户需要时能够快速加载。通过预下载机制，提前加载即将跳转到的子包，减少用户等待时间，提升用户体验。</p><p>配置如下：</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;preloadRule&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pagesMessage/pages/message&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;network&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;packages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;__APP__&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;pagesCenter/page/center&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;network&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;packages&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;pagesMessage&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>注意，有一个限制：同一个分包中的页面享有共同的预下载大小限额 2M，限额会在工具中打包时校验。</p><p>例如：页面 A 和 B 都在同一个分包中，A 中预下载总大小 0.5M 的分包，B 中最多只能预下载总大小 1.5M 的分包。</p></blockquote><h3 id="_4-manifest-使配置生效" tabindex="-1">4. manifest 使配置生效 <a class="header-anchor" href="#_4-manifest-使配置生效" aria-label="Permalink to &quot;4. manifest 使配置生效&quot;">​</a></h3><p>在对应平台的配置下添加<code>&quot;optimization&quot;:{&quot;subPackages&quot;:true}</code>开启分包优化，则分包策略生效</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4e0926a982f54ca0850687e0bd7c8251~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=661&amp;h=290&amp;s=29579&amp;e=png&amp;b=212121" alt="image.png"></p><h2 id="四-实践经验分享" tabindex="-1">四. 实践经验分享 <a class="header-anchor" href="#四-实践经验分享" aria-label="Permalink to &quot;四. 实践经验分享&quot;">​</a></h2><h3 id="_1-打包限制" tabindex="-1">1. 打包限制 <a class="header-anchor" href="#_1-打包限制" aria-label="Permalink to &quot;1. 打包限制&quot;">​</a></h3><ul><li><p><code>tabBar</code>  页面必须在主包内。</p></li><li><p>首页必须在主包内，就是 pages.json 里配置的第一个页面路由。</p></li><li><p>预下载限制：同一个分包中的页面享有共同的预下载大小限额 2M，限额会在工具中打包时校验。</p></li></ul><h3 id="_2-引用限制" tabindex="-1">2. 引用限制 <a class="header-anchor" href="#_2-引用限制" aria-label="Permalink to &quot;2. 引用限制&quot;">​</a></h3><ul><li><p>分包之间的资源不能互相引用私有资源，例如：<code>packageA</code>  无法 引入  <code>packageB</code>的相关文件。</p></li><li><p>主包与分包之间的限制：即主包不能引用分包的私有资源，分包可以引用主包的公共资源。</p></li></ul><h3 id="_3-其他说明" tabindex="-1">3. 其他说明 <a class="header-anchor" href="#_3-其他说明" aria-label="Permalink to &quot;3. 其他说明&quot;">​</a></h3><ul><li><p><code>subPackages</code>  里的 pages 的路径是  <code>root</code>  下的相对路径，不是全路径。</p></li><li><p>微信小程序每个分包的大小是 2M，总体积一共不能超过 20M。</p></li><li><p>支付宝小程，百度小程序每个分包的大小是 2M，总体积一共不能超过 8M。</p></li><li><p>针对<code>vendor.js</code>过大的情况可以使用运行时压缩代码</p><ul><li><p><code>HBuilderX</code>创建的项目勾选<code>运行--&gt;运行到小程序模拟器--&gt;运行时是否压缩代码</code></p></li><li><p><code>cli</code>创建的项目可以在<code>package.json</code>中添加参数<code>--minimize</code>，示例：<code>&quot;dev:mp-weixin&quot;: &quot;cross-env NODE_ENV=development UNI_PLATFORM=mp-weixin vue-cli-service uni-build --watch --minimize&quot;</code></p></li></ul></li></ul><h2 id="结语" tabindex="-1">结语 <a class="header-anchor" href="#结语" aria-label="Permalink to &quot;结语&quot;">​</a></h2><p>通过合理的微信小程序分包策略，我们可以将小程序的代码和资源拆分成多个子包，从而分散首页的加载压力，提升小程序的性能。</p><p>在制定分包策略时，我们可以根据功能模块划分来确定分包的范围和关系。同时，分包后我们也需要关注一些性能优化的细节，如首次加载优化和分包预下载技巧。</p><p>最后，我们也可以借鉴一些实践经验和注意事项，来优化自己的小程序分包策略，并提升用户的使用体验。</p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ol><li><p><a href="https://uniapp.dcloud.net.cn/collocation/pages.html#subpackages" target="_blank" rel="noreferrer">uni-app 分包加载机制</a></p></li><li><p><a href="https://developers.weixin.qq.com/miniprogram/dev/framework/subpackages/basic.html" target="_blank" rel="noreferrer">微信小程序使用分包</a></p></li></ol>`,56);function k(E,o,r,d,g,c){const s=t("ArticleFooter");return l(),i("div",null,[h,n(s,{link:["juejin::https://juejin.cn/post/7294525616450535436","weixin::https://mp.weixin.qq.com/s/LFH-lneMLNwRCDqMR2HnUA"]},null,8,["link"])])}const q=a(e,[["render",k]]);export{y as __pageData,q as default};
