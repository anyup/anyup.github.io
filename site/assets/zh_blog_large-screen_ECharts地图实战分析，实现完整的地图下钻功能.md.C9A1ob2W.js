import{_ as i,c as a,I as n,aU as p,o as h,E as t}from"./chunks/framework.CpXV_ol5.js";const F=JSON.parse('{"title":"ECharts地图实战分析：实现一个完整的地图下钻功能","description":"","frontmatter":{"title":"ECharts地图实战分析：实现一个完整的地图下钻功能"},"headers":[],"relativePath":"zh/blog/large-screen/ECharts地图实战分析，实现完整的地图下钻功能.md","filePath":"zh/blog/large-screen/ECharts地图实战分析，实现完整的地图下钻功能.md","lastUpdated":1725606759000}'),l={name:"zh/blog/large-screen/ECharts地图实战分析，实现完整的地图下钻功能.md"},k=p(`<h1 id="echarts地图实战分析-实现一个完整的地图下钻功能" tabindex="-1">ECharts地图实战分析：实现一个完整的地图下钻功能 <a class="header-anchor" href="#echarts地图实战分析-实现一个完整的地图下钻功能" aria-label="Permalink to &quot;ECharts地图实战分析：实现一个完整的地图下钻功能&quot;">​</a></h1><h2 id="一-前言" tabindex="-1">一. 前言 <a class="header-anchor" href="#一-前言" aria-label="Permalink to &quot;一. 前言&quot;">​</a></h2><p>在众多 ECharts 图表类型中，开发者始终绕不开的有各种各样的地图开发，关于地图开发，可能比其他图表相对繁琐一些，其实说简单也简单，说复杂也复杂，其中不乏有层级地图、3D 地图等，感觉地图开发已经被玩出了花。</p><p>在 ECharts 地图开发中，地图下钻功能是重要的基础功能，将来能为数据分析和展示提供更加直观和有效的方式。本篇文章，我将会介绍如何利用 ECharts 实现一个完整的地图下钻功能，让用户能够通过点击地图上的区域来实现层级的切换和数据的展示。</p><h2 id="二-什么是地图下钻功能" tabindex="-1">二. 什么是地图下钻功能？ <a class="header-anchor" href="#二-什么是地图下钻功能" aria-label="Permalink to &quot;二. 什么是地图下钻功能？&quot;">​</a></h2><p>地图下钻（<strong>Drill-down</strong>）是一种常见的高级交互功能，可以使用户能够深入地图的不同层级，查看更加详细的地理数据，帮助用户逐层深入地查看不同区域或层级的数据分布情况，极大地增强了数据可视化的深度和用户体验。</p><p>地图下钻功能是指在地图上点击某个区域后，该区域会进一步细化展示其下一级别的区域信息，例如：从省级地图下钻到市级地图，再到区县级地图，这种逐级细化的过程有助于我们更细致地分析和理解地域数据。例如下面这种效果：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb0107d5ea4c4321a68d7439b74de28f~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1207&amp;h=619&amp;s=3160430&amp;e=gif&amp;f=88&amp;b=f8f5f0" alt="地图下钻 1.gif"></p><p>通过地图下钻功能，用户可以通过交互操作深入地图的不同层级，从整体的地图层级逐渐细化到更具体的区域层级，用户可以更深入地了解地理数据，探索不同区域的数据细节，并进行更精确的数据分析和决策。这种交互式的地图功能可以极大地增强用户与数据之间的互动性和可视化体验，提升数据分析和展示的效果。</p><p>在 ECharts 中实现地图下钻功能，通常需要通过配置点击事件，根据用户点击的区域进行数据更新，从而实现地图的层级切换和展示。地图下钻功能广泛应用于各种数据可视化场景，如<strong>地理信息系统</strong>、<strong>区域销售分析</strong>、<strong>人口统计</strong>等领域，帮助用户更好地理解和利用地理数据。</p><h2 id="三-如何在-echarts-中实现地图下钻" tabindex="-1">三. 如何在 ECharts 中实现地图下钻？ <a class="header-anchor" href="#三-如何在-echarts-中实现地图下钻" aria-label="Permalink to &quot;三. 如何在 ECharts 中实现地图下钻？&quot;">​</a></h2><p>如何在 ECharts 中实现地图下钻？我总结为以下 4 个步骤：</p><ol><li>准备地图数据</li><li>初始化 ECharts 地图</li><li>设置地图下钻事件监听器</li><li>实现地图下钻</li></ol><p>在进行地图下钻功能之前，我们需要先实例化一个最基础的中国地图，为地图下钻做准备。之前我写过一篇文章，讲述如何快速的创建一个合规的中国地图。</p><p>详细了解请参考之前文章： <a href="https://juejin.cn/post/7313742254144880676" target="_blank" rel="noreferrer">分享 ECharts 地图合规整改经验，并实现一个最基础的中国地图</a></p><p>在这里，我们简单的总结一下，完成两步就可以渲染一个中国地图。</p><h3 id="_1-准备地图数据" tabindex="-1">1. 准备地图数据 <a class="header-anchor" href="#_1-准备地图数据" aria-label="Permalink to &quot;1. 准备地图数据&quot;">​</a></h3><p>首先，我们需要准备多层级的地图数据，比如国家、省份、城市等各级别的地理数据，以及每个区域对应的数据指标，这些数据通常是以 JSON 格式提供的地理信息数据。同时，确保数据格式符合 ECharts 的要求，可以参考官方文档了解各种地图类型的数据格式。</p><p>我们可以在一些其他网站获取最新的 geoJson，比如：我是通过<a href="https://datav.aliyun.com/portal/school/atlas/area_selector" target="_blank" rel="noreferrer">阿里云 DataV 数据可视化平台</a>下载最新的 json 数据文件，以保证目前所有市区的数据都是最新的。</p><p>如下图所示，选择数据版本后，点击页面上的下载按钮后即可以下载 json 文件:</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dbc0e54a906f465c9e337ba8984b20f8~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1190&amp;h=678&amp;s=268279&amp;e=png&amp;b=f9f6f3" alt="image.png"></p><p>本地调试也可以使用在线的 JSON API 接口获取数据，不过仅限于本地测试使用！线上会 403 错误，API 地址：<a href="https://geo.datav.aliyun.com/areas_v3/bound/geojson?code=%7Badcode%7D_full" target="_blank" rel="noreferrer">https://geo.datav.aliyun.com/areas_v3/bound/geojson?code={adcode}_full</a></p><h3 id="_2-初始化-echarts-地图" tabindex="-1">2. 初始化 ECharts 地图 <a class="header-anchor" href="#_2-初始化-echarts-地图" aria-label="Permalink to &quot;2. 初始化 ECharts 地图&quot;">​</a></h3><p>在 ECharts 的配置项中，配置地图组件并设置合适的地图类型（如中国地图、世界地图等），以及需要展示的数据和样式，确保每个区域都有对应的数据用于显示。</p><p>还是以中国地图为例，创建一个 ECharts 地图实例，并加载最顶层（国家级）的地图数据：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myChart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;main&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    geo: {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 使用 registerMap 注册的地图名称。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      map: name,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      roam: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    series: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;map&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        map: name, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 地图名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        geoIndex: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        roam: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        data: data, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 地图数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  };</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(option, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> chinaGeoJson; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 第一步所准备的地图 json 数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;china&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span></code></pre></div><p>完成以上两个步骤就可以实现中国地图的正常展示了，以上为简洁版的中国地图，如果想要添加更多的地图属性，可以根据 ECharts 官方配置项手册文档进行配置，这里就不再详细说明了。</p><p><a href="https://echarts.apache.org/zh/option.html#geo" target="_blank" rel="noreferrer">ECharts 地图配置项手册</a></p><p>接下来我们要进行的是如何在用户点击地图省、市、区的时候进行下探地图显示！</p><h2 id="四-实现地图下钻" tabindex="-1">四. 实现地图下钻 <a class="header-anchor" href="#四-实现地图下钻" aria-label="Permalink to &quot;四. 实现地图下钻&quot;">​</a></h2><p>实现地图下钻的关键逻辑在于：为地图添加点击事件监听器，当用户点击地图上的某个区域时，触发相应的事件处理函数，根据点击的区域获取下一级别的地图数据并更新图表。</p><p><strong>实例场景</strong>：比如，我点击山东省，可以查看山东省下各市级地图，点击青岛市，进而查看青岛市下各区级地图。</p><p><strong>实现逻辑</strong>：</p><ul><li><p>当用户点击某个区域时，例如：山东省，获取到该区域对应的编码。</p></li><li><p>通过该区域对应的编码，获取到该区域的 geoJson 数据。</p></li><li><p>通过该区域的 geoJson 数据，渲染到 ECharts 地图组件上。</p></li></ul><p>接下来我们一步一步进行分析。</p><h3 id="_1-获取区域编码" tabindex="-1">1. 获取区域编码 <a class="header-anchor" href="#_1-获取区域编码" aria-label="Permalink to &quot;1. 获取区域编码&quot;">​</a></h3><p>首先需要给地图添加点击事件监听器，当用户点击地图时，获取到用户点击该区域对应的编码。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params.data) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d630071538eb4e138067f707a4e8e7c9~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=929&amp;h=470&amp;s=136812&amp;e=gif&amp;f=43&amp;b=fdfdfd" alt="地图下钻 3.gif"></p><p>如图所示，通过上述的操作，我们能够轻松的获取到该区域的地理编码 <code>adcode</code> 和名称。</p><h3 id="_2-获取点击区域地图-json-数据" tabindex="-1">2. 获取点击区域地图 JSON 数据 <a class="header-anchor" href="#_2-获取点击区域地图-json-数据" aria-label="Permalink to &quot;2. 获取点击区域地图 JSON 数据&quot;">​</a></h3><p>获取到地理编码 <code>adcode</code> 和名称之后，接下来需要通过 <code>adcode</code> 来获取子区域的 geoJson，以下的代码是通过调用阿里云 DataV 在线的 JSON API 接口获取到的数据。</p><blockquote><p>注意：过调用阿里云 DataV 在线的 JSON API 接口获取到的数据，仅限于调试！线上会 403 错误，如果要上线，需要将各个区域的数据下载到本地加载。</p></blockquote><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据 adcode 获取原始地图json数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`https://geo.datav.aliyun.com/areas_v3/bound/geojson?code=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">adcode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}_full\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      callback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  );</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 例如：根据 adcode 获取省市区的 json 数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取山东省下的所有市的数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;370000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;山东省子区域地图数据：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取青岛市下的所有区级数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;370200&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;青岛市子区域地图数据：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b7dc2f9fff8c44b194c0e71515115b36~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1054&amp;h=491&amp;s=447252&amp;e=gif&amp;f=75&amp;b=fdfdfd" alt="地图下钻 4.gif"></p><p>通过上图所示，用户点击某个省份，获取到该省份的 adcode，根据 adcode 获取该省份下所有市对应的 geoJson 数据。</p><h3 id="_3-渲染区域地图" tabindex="-1">3. 渲染区域地图 <a class="header-anchor" href="#_3-渲染区域地图" aria-label="Permalink to &quot;3. 渲染区域地图&quot;">​</a></h3><p>通过上述操作，我们成功的获取到了点击区域的子区域地图 JSON 数据，通过 JSON 数据，我们就可以动态的渲染区域地图了，如下代码所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 渲染地图</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 注册地图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, data);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 根据 json 数据拼装 mapdata， 用于地图点击下钻时传递数据，主要有adcode、name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mapdata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.features.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.properties;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 配置option</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, mapdata);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据adcode区域编码获取地图数据，例如：根据山东省的区域编码：370000，获取市区geoJson数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;370000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;山东省子区域地图数据：&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;山东省&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5d09a86b49414b488f28c7a03fcbdab5~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=929&amp;h=470&amp;s=80635&amp;e=gif&amp;f=28&amp;b=fdfdfd" alt="地图下钻 2.gif"></p><h2 id="五-完善交互和效果" tabindex="-1">五. 完善交互和效果 <a class="header-anchor" href="#五-完善交互和效果" aria-label="Permalink to &quot;五. 完善交互和效果&quot;">​</a></h2><p>为提升用户体验，可以添加一些校验，避免在下钻过程中出现一些异常情况。比如：</p><ul><li><p>在地图下钻的最后一层，如何判断处理该地图是否还有下级区域，简单说就是是否还允许地图继续下钻？</p></li><li><p>地图下钻过程过程中，我需要返回上一级地图，该如何实现？</p></li></ul><p>以上这两个问题是在地图开发中必须要考虑的基础问题，下面我来分析一下如何优化这两种问题，提升用户体验。</p><h3 id="_1-处理递归下钻" tabindex="-1">1. 处理递归下钻 <a class="header-anchor" href="#_1-处理递归下钻" aria-label="Permalink to &quot;1. 处理递归下钻&quot;">​</a></h3><p>在事件处理函数中，根据用户点击的区域信息，判断是否需要进行下钻操作。如果需要下钻，才可以展示子区域的地图信息。如果已经到了地图最末端，无法再进行下钻，应该相应提示用户。</p><p>例如，当用户点击到区县级地图且无法再下钻时，可以考虑弹窗显示详细信息或者返回至上一级别。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置地图点击事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;click&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params.data) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.data;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 判断如果是 district 层级，则提示用户已经为最底级了</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;district&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;无此区域地图显示！&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      initChinaMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重新渲染中国地图或其他逻辑处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 继续进行下钻</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name, adcode }, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/066808fc30b14a54896631df15aa804d~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1112&amp;h=492&amp;s=161903&amp;e=gif&amp;f=46&amp;b=fdfdfd" alt="地图下钻 5.gif"></p><h3 id="_2-返回上一级地图" tabindex="-1">2. 返回上一级地图 <a class="header-anchor" href="#_2-返回上一级地图" aria-label="Permalink to &quot;2. 返回上一级地图&quot;">​</a></h3><p>在用户点击地图进行下钻的过程中，难免会返回上一层进行重新点击的需求，这种需求应该怎么实现呢？下面我来具体分析一下：</p><ul><li>添加返回按钮，返回按钮显示隐藏逻辑处理，比如：仅当可以返回上一层地图级别的时候才显示返回</li><li>记录地图下钻过程中的地图层级数据，比如：山东省 -&gt; 青岛市 -&gt; 崂山区</li><li>根据记录的层级数据实现返回上一级操作</li></ul><h4 id="返回按钮的显示和隐藏" tabindex="-1">返回按钮的显示和隐藏 <a class="header-anchor" href="#返回按钮的显示和隐藏" aria-label="Permalink to &quot;返回按钮的显示和隐藏&quot;">​</a></h4><p>关于返回按钮的显示和隐藏，可以有多种判断方式，可以根据是否为初始化地图来判断，只有当前渲染为初始地图时，隐藏返回按钮，也可以根据记录地图的层级数据数组判断是否显示返回按钮。</p><p>下述代码是根据 <code>adcode</code> 来判断是否为初始地图，因为我是以中国地图为初始化地图，所以判断 <code>adcode</code> 是否等于 <code>100000</code> 来判断是否显示，如下代码所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置返回策略，根据 adcode 区域编码判断是否需要返回</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setBackbtn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 如果为初始化的中国地图，则不显示返回</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (adcode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 显示返回按钮</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#back&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hide</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 隐藏返回按钮</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    $</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;#back&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><blockquote><p>以上只是一种思路，你可以考虑其他方式判断，合理即可！</p></blockquote><h4 id="记录地图的层级数据" tabindex="-1">记录地图的层级数据 <a class="header-anchor" href="#记录地图的层级数据" aria-label="Permalink to &quot;记录地图的层级数据&quot;">​</a></h4><p>需要定义一个变量 mapList 数组，主要用于返回时可以根据 adcode 获取上一级的地图数据。当用户点击地图进行下钻时，记录地图的名称、级别和编码。当用户返回上一级的时候，需要删除记录数组中对应的数据。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击地图下钻时记录name和adcode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name, adcode });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击返回时删除对应的name和adcode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h4 id="返回上一级" tabindex="-1">返回上一级 <a class="header-anchor" href="#返回上一级" aria-label="Permalink to &quot;返回上一级&quot;">​</a></h4><p>根据 mapList 数组中记录的层级数据实现返回上一级操作，点击返回时取出记录 name 和 adcode，获取上一级地图数据，返回成功后删除对应的 name 和 adcode</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击返回，地图返回上一级</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> goBack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (mapList.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mapList[mapList.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mapList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name, adcode }, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, data);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/11b1f617c2ff4dd79b6e6cad1a59e8da~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1195&amp;h=494&amp;s=403330&amp;e=gif&amp;f=58&amp;b=fdfdfd" alt="地图下钻 6.gif"></p><h3 id="_3-自定义-tooltip" tabindex="-1">3. 自定义 tooltip <a class="header-anchor" href="#_3-自定义-tooltip" aria-label="Permalink to &quot;3. 自定义 tooltip&quot;">​</a></h3><p>加一些指向 tooltip 提示，当用用鼠标指向省市区时，显示省市区的名称、编码及层级数据，如下代码实现：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">option </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // tooltip 提示配置项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tooltip: {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    formatter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 根据需要进行数据处理或格式化操作</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.data;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 返回自定义的tooltip内容</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`adcode: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">adcode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&lt;br&gt;name: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&lt;br&gt;level: \${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">level</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><p>更多配置请查看 tooltip 相关文档：<a href="https://echarts.apache.org/zh/option.html#geo.tooltip" target="_blank" rel="noreferrer">ECharts geo.tooltip 配置项</a></p><p>完成以上所有的操作后，最终的效果图如下所示：</p><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/42559aa2f43f4f9bb3004fd4ae881382~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=969&amp;h=634&amp;s=730314&amp;e=gif&amp;f=86&amp;b=fefefe" alt="地图下钻7.gif"></p><h2 id="六-总结" tabindex="-1">六. 总结 <a class="header-anchor" href="#六-总结" aria-label="Permalink to &quot;六. 总结&quot;">​</a></h2><p>通过本篇文章的详细讲述，我们应该都有了一个明确的思路，可以借助 ECharts 快速地实现地图下钻功能。当然，本文完成的是核心下钻逻辑，而且也没有对地图的样式进行一些复杂的样式配置，在实际应用中可能还需要对颜色映射、数据标注等方面进行个性化定制，但这些并不是难点，相信参考 ECharts 配置项手册来进行配置地图属性，也是非常容易实现的。</p><p>因此，开发地图的关键点在于开发地图的过程中，我们始终要有一个清晰明了的开发思路和步骤，才能保证按部就班的实现功能，并且避免一些不必要的 BUG 产生。</p><p>比如：关于使用 ECharts 的图表渲染造成的内存溢出，导致浏览器崩溃问题，最终一步一步复盘代码才能解决问题。本文在这方面没有详细说明，如果想要详细查看参考之前文章：<a href="https://juejin.cn/post/7292298037204271158" target="_blank" rel="noreferrer">分析 ECharts 图表渲染导致的内存泄漏问题 - 附解决方案</a></p><h2 id="七-资源链接" tabindex="-1">七. 资源链接 <a class="header-anchor" href="#七-资源链接" aria-label="Permalink to &quot;七. 资源链接&quot;">​</a></h2><ol><li><p>代码演示地址：<a href="https://anyup.gitee.io/juejin-up/src/echarts/drill-down-map.html" target="_blank" rel="noreferrer">中国地图下钻示例演示：支持所有省市下钻演示</a></p></li><li><p>源码地址：<a href="https://github.com/anyup/juejin-up/blob/master/src/echarts/drill-down-map.html" target="_blank" rel="noreferrer">ECharts 地图下钻源码地址</a></p></li><li><p>geoJson 文件下载：<a href="https://github.com/anyup/juejin-up/blob/master/plugins/%E5%85%A8%E5%9B%BD%E5%9C%B0%E5%9B%BE%E4%B8%8B%E9%92%BB%20geoJson%20%E5%AE%8C%E6%95%B4%E7%89%88%2020240312.zip" target="_blank" rel="noreferrer">全国地图下钻 geoJson 完整版下载 20240312.zip</a></p></li><li><p>官方文档：<a href="https://echarts.apache.org/zh/option.html#geo" target="_blank" rel="noreferrer">ECharts 地图配置项手册</a></p></li></ol>`,86);function e(E,r,d,g,o,c){const s=t("ArticleFooter");return h(),a("div",null,[k,n(s,{link:"https://juejin.cn/post/7345297984264863782"})])}const u=i(l,[["render",e]]);export{F as __pageData,u as default};
