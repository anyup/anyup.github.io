import{_ as a,c as e,I as n,aU as s,o as p,E as l}from"./chunks/framework.CpXV_ol5.js";const _=JSON.parse('{"title":"「应对微信调整」小程序推送公众号模版消息整改方案","description":"","frontmatter":{"title":"「应对微信调整」小程序推送公众号模版消息整改方案"},"headers":[],"relativePath":"zh/blog/front-end/微信小程序，推送公众号模版消息整改方案.md","filePath":"zh/blog/front-end/微信小程序，推送公众号模版消息整改方案.md","lastUpdated":1727083629000}'),t={name:"zh/blog/front-end/微信小程序，推送公众号模版消息整改方案.md"},o=s(`<h1 id="小程序推送公众号模版消息整改方案" tabindex="-1">小程序推送公众号模版消息整改方案 <a class="header-anchor" href="#小程序推送公众号模版消息整改方案" aria-label="Permalink to &quot;小程序推送公众号模版消息整改方案&quot;">​</a></h1><blockquote><p>本文章适合使用小程序 openid 调用微信公众平台下发统一消息接口修改为模版消息的同学阅读</p></blockquote><h2 id="一-前言" tabindex="-1">一. 前言 <a class="header-anchor" href="#一-前言" aria-label="Permalink to &quot;一. 前言&quot;">​</a></h2><p>书接上文，本文继续进行对“<strong>微信团队调整微信公众号下发统一消息接口</strong>”的应对方案探讨，如何尽快的完成适配，以便于我们能正常的使用公众号和小程序的推送消息功能。</p><p>关于微信官方团队发出的公告事宜的具体事项，有还未了解的同学可以浏览我之前的文章：</p><p>解决方案思路引导：<a href="https://juejin.cn/post/7289339087289778217" target="_blank" rel="noreferrer">突发！如何应对微信小程序与公众号下发统一消息接口调整</a></p><p>本文将会对之前文章中提到的解决方案之一进行详细的讲解：另一种解决方案：<strong>打补丁方案</strong></p><ol><li>必须有一个微信开放平台，使用 unionid 做关联。</li><li>小程序与公众号同一主体。</li><li>小程序和公众号和微信开放平台关联。</li><li>通过 unionid 使 小程序 openid 和公众号 openid 关联起来，实现公众号模版推送。</li></ol><blockquote><p>注意：这个方案真的是退退退而求其次的方案，如果是老项目，不想重新开发一套认证系统，可以使用这种方案改一下。如果是新开发的项目，不要使用这种方案。</p></blockquote><h2 id="二-开发前准备" tabindex="-1">二. 开发前准备 <a class="header-anchor" href="#二-开发前准备" aria-label="Permalink to &quot;二. 开发前准备&quot;">​</a></h2><h3 id="_1-申请微信开放平台" tabindex="-1">1. 申请微信开放平台 <a class="header-anchor" href="#_1-申请微信开放平台" aria-label="Permalink to &quot;1. 申请微信开放平台&quot;">​</a></h3><p>进入微信平台官网，点击注册，按照指引进行完成注册并认证。</p><p><a href="https://open.weixin.qq.com/" target="_blank" rel="noreferrer">微信开放平台官网：https://open.weixin.qq.com/</a></p><h3 id="_2-申请微信公众号、小程序" tabindex="-1">2. 申请微信公众号、小程序 <a class="header-anchor" href="#_2-申请微信公众号、小程序" aria-label="Permalink to &quot;2. 申请微信公众号、小程序&quot;">​</a></h3><p>本文在这里不做重复的讲解，参考上一篇文章指引完成注册：</p><p><a href="https://juejin.cn/post/7291133720903516219" target="_blank" rel="noreferrer">从零到一快速实现一个微信公众号授权项目</a></p><h3 id="_3-关联绑定" tabindex="-1">3. 关联绑定 <a class="header-anchor" href="#_3-关联绑定" aria-label="Permalink to &quot;3. 关联绑定&quot;">​</a></h3><p>在微信开放平台绑定微信公众号和小程序，这样在获取 openid 的时候会多获取一个参数 unionid，这个 unionid 就是连接公众号和小程序的桥梁，通过小程序 openid 和 unionid 可以获取到公众号的 openid。</p><p>说到这里，不太长开发微信应用的同学是不是会有点懵，怎么这么多 id，那么接下来我们先认识一下微信平台的这些 id 的具体含义吧。</p><h3 id="_4-微信的几个-id-说明" tabindex="-1">4. 微信的几个 ID 说明 <a class="header-anchor" href="#_4-微信的几个-id-说明" aria-label="Permalink to &quot;4. 微信的几个 ID 说明&quot;">​</a></h3><ul><li><p><strong>AppID</strong>：AppID 是不同类型的产品的账号 ID，是账号的唯一标识符。</p><ul><li>例如：公众号的 AppID、小程序的 AppID、开放平台的 AppID、第三方平台的 AppID、移动应用的 AppID、网站应用的 AppID、小商店的 AppID 等等。</li></ul></li><li><p><strong>openid</strong>：openid 是微信用户在不同类型的产品的身份 ID</p><ul><li>微信用户访问公众号、小程序、移动应用、网站应用、小商店等都会有唯一的 openid，但同一个微信用户访问不同的产品生成的 openid 也是不一样的。</li><li>例如，对于不同公众号，同一用户的 openid 不同；同理，对于不同的小程序，同一用户的 openid 也是不同的。</li></ul></li><li><p><strong>unionid</strong>：unionid 是微信用户在同一个开放平台下的产品的身份 ID</p><ul><li>如果开发者拥有多个移动应用、网站应用、和公众账号（即公众号和小程序），可通过 UnionID 来区分用户的唯一性，因为只要是同一个微信开放平台账号下的移动应用、网站应用和公众账号，用户的 UnionID 是唯一的。即，同一用户，对同一个微信开放平台下的不同应用，UnionID 是相同的。</li></ul></li></ul><p><strong>总结上面的，简言之就是</strong>：</p><ul><li><p><strong>AppID</strong>：是产品的身份证，是唯一标识。</p></li><li><p><strong>openid</strong>：用户在产品使用时产生的唯一身份标识，遵循两同原则，同一用户使用同一产品，openid 相同。其中有一个不同，openid 则不同。</p></li><li><p><strong>unionid</strong>：用户在开放平台下的身份标识，同一个开放平台下绑定的公众号、小程序、移动应用、网站应用等，获取到的 unionid 都是一样的。</p></li></ul><p>上面的总结一下，你是不是就舒服多了，豁然明朗了。</p><h2 id="三-进入开发" tabindex="-1">三. 进入开发 <a class="header-anchor" href="#三-进入开发" aria-label="Permalink to &quot;三. 进入开发&quot;">​</a></h2><p>其实这种方案，对于前端来说，要修改的地方特别少</p><h3 id="_1-前端修改" tabindex="-1">1. 前端修改 <a class="header-anchor" href="#_1-前端修改" aria-label="Permalink to &quot;1. 前端修改&quot;">​</a></h3><p><img src="https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5692a718073d41079f35c6eb30f6dc2e~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1114&amp;h=264&amp;s=22896&amp;e=png&amp;b=ffffff" alt="image.png"></p><p align="center">前端运行流程图</p><ul><li>调用微信小程序登录接口，获取到 code</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">wx.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">login</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  success</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (res.code) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 获取到code = res.code</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      // 通过 code 发起网络请求换取 openid 和 unionid</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;登录失败！&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> res.errMsg)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2c0d0198f32f4fccb027480a62ba9dc6~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1027&amp;h=206&amp;s=25404&amp;e=png&amp;b=ffffff" alt="image.png"></p><ul><li>根据 code 换取小程序 openid 和 unionid</li><li>将小程序 openid 和 unionid 存储在后端</li></ul><p>完成上面的操作，基本上前端就整改完毕了，剩下的就是后端来修改了。</p><h3 id="_2-后端修改" tabindex="-1">2. 后端修改 <a class="header-anchor" href="#_2-后端修改" aria-label="Permalink to &quot;2. 后端修改&quot;">​</a></h3><p><img src="https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f12b88cf59b04e7f9a7cee65ff3a3d77~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1233&amp;h=298&amp;s=28264&amp;e=png&amp;b=ffffff" alt="image.png"></p><p align="center">后端运行流程图</p><ul><li>首先获取到小程序 openid 和 unionid。</li><li>获取到所有关注微信公众号的关注人列表，拿到对应的关注人的 公众号 openid 和 unionid。</li><li>根据第一步获取到的 unionid 对比后拿到公众号 openid。</li><li>使用公众号 openid 完成模版消息推送。</li></ul><blockquote><p>本文不对后端的整改方案做过多详细的讲解，只提供修改思路。</p></blockquote><h2 id="四-总结" tabindex="-1">四. 总结 <a class="header-anchor" href="#四-总结" aria-label="Permalink to &quot;四. 总结&quot;">​</a></h2><p>虽说这种方式能够快速的解决微信接口变更带来的影响，但是我始终不建议这样做，因为我认为这是野路子实现方案，也许这是一种临时方案，总觉得以后还需要改动。不建议使用这种方案的原因还有以下几点：</p><ol><li>后台获取所有关注公众号的 openid 时间点问题，什么时间获取比较合适？需要轮询获取比对？</li><li>频繁调用微信官方的接口，会不会有限制？</li><li>性能问题，关注人为海量数据时，需要考虑比对的算法性能问题。</li></ol><p>不过也有几个好处如下：</p><ol><li>改动小，开发快速。</li><li>用户无感知，体验好，不需要用户重新操作。</li></ol><p>综上所述，如果追求快的话就使用这种方式整改；如果寻求标准化流程，还是建议完全整改。</p><h3 id="以下是彻底改正的方案-请查阅" tabindex="-1">以下是彻底改正的方案，请查阅： <a class="header-anchor" href="#以下是彻底改正的方案-请查阅" aria-label="Permalink to &quot;以下是彻底改正的方案，请查阅：&quot;">​</a></h3><p><a href="https://juejin.cn/post/7291133720903516219" target="_blank" rel="noreferrer">「应对微信调整」从零到一快速实现一个微信公众号授权项目</a></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><p><a href="https://developers.weixin.qq.com/community/develop/doc/000ae8d6348af08e7030bc2546bc01" target="_blank" rel="noreferrer">微信公告链接</a></p><p><a href="https://developers.weixin.qq.com/doc/oplatform/Third-party_Platforms/2.0/getting_started/how_to_read.html" target="_blank" rel="noreferrer">微信开放平台文档</a></p>`,50);function r(h,d,c,k,u,g){const i=l("ArticleFooter");return p(),e("div",null,[o,n(i,{link:["juejin::https://juejin.cn/post/7291500185372229689","weixin::https://mp.weixin.qq.com/s/q5_gY0V5ChEDbJRZXCTOxA"]},null,8,["link"])])}const m=a(t,[["render",r]]);export{_ as __pageData,m as default};
