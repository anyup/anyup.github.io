import{_ as i,c as a,I as n,aU as h,o as p,E as t}from"./chunks/framework.CpXV_ol5.js";const F=JSON.parse('{"title":"ECharts-GL 实战：教你轻松实现 3D 地图下钻功能","description":"","frontmatter":{"title":"ECharts-GL 实战：教你轻松实现 3D 地图下钻功能"},"headers":[],"relativePath":"zh/blog/large-screen/ECharts-GL实现3D地图下钻功能.md","filePath":"zh/blog/large-screen/ECharts-GL实现3D地图下钻功能.md","lastUpdated":1727084076000}'),l={name:"zh/blog/large-screen/ECharts-GL实现3D地图下钻功能.md"},e=h(`<h1 id="echarts-gl-实战-教你轻松实现-3d-地图下钻功能" tabindex="-1">ECharts-GL 实战：教你轻松实现 3D 地图下钻功能 <a class="header-anchor" href="#echarts-gl-实战-教你轻松实现-3d-地图下钻功能" aria-label="Permalink to &quot;ECharts-GL 实战：教你轻松实现 3D 地图下钻功能&quot;">​</a></h1><h2 id="一-前言" tabindex="-1">一. 前言 <a class="header-anchor" href="#一-前言" aria-label="Permalink to &quot;一. 前言&quot;">​</a></h2><p>在做可视化大屏项目中，<strong>地图下钻</strong>功能是常被用户提出来要做的功能，其主要功能是指在地图上点击某个区域后，该区域会进一步细化展示其下一级别的地图信息，</p><p>例如：从国家地图，点击某省份下钻到省级地图，再点击市区下钻到市级地图，再到区县级地图，主要目的通过点击进入不同的省市区进而联动不同省市区界别，展示相关的数据在大屏上，这种逐级细化的过程有助于更细致地分析和理解地区数据。</p><p>地图下钻是和用户进行交互的功能，可以使用户能够深入地图的不同层级，查看更加详细的地图层级数据，帮助用户逐层深入地查看不同区域或层级的数据分布情况，增强了数据可视化的深度和用户体验。</p><p>此前，我写过一篇文章详细介绍了 ECharts 2D 地图下钻功能的实现，详细参考：<a href="https://juejin.cn/post/7345297984264863782" target="_blank" rel="noreferrer">ECharts 地图实战分析：实现一个完整的地图下钻功能</a></p><p>因此，今天的文章主要目的是实现一款效果还算不错的 3D 地图下钻功能。</p><p>提前预览一下效果图吧，文末给出源码以及演示地址，各位倔友们满意请<strong>点赞收藏</strong>，感谢！</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/a5d45c44a12a4644aafe45ad682492bb~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1727688670&amp;x-orig-sign=ZDyobbGz%2B%2BRdr3FlpAiM7%2BKje48%3D" alt="3D-map-1.gif"></p><h2 id="二-实现-3d-地图" tabindex="-1">二. 实现 3D 地图 <a class="header-anchor" href="#二-实现-3d-地图" aria-label="Permalink to &quot;二. 实现 3D 地图&quot;">​</a></h2><p>本文所实现的 3D 地图主要使用 ECharts 和 ECharts-GL 构建，ECharts-GL 相当于是 ECharts 的扩展插件，主要用于创建 3D 可视化应用程序，因此使用 ECharts 搭配 ECharts—GL 插件库就可以构建出 3D 地图。</p><p>在这里，我们也简单总结一下如何使用 ECharts + ECharts-GL 实现一款还不错的 3D 地图：</p><ul><li>引入 ECharts 和 ECharts-GL 开源库</li><li>准备 geoJson 层级数据</li><li>初始化 3D 地图，根据所需的 geoJson 数据渲染地图</li><li>丰富地图 3D 效果：包括地图颜色、标签、鼠标指向、提示等基础配置，环境贴图、地面、光照、纹理、视角控制等丰富配置</li></ul><h3 id="_1-引入-echarts-和-echarts-gl" tabindex="-1">1. 引入 ECharts 和 ECharts-GL <a class="header-anchor" href="#_1-引入-echarts-和-echarts-gl" aria-label="Permalink to &quot;1. 引入 ECharts 和 ECharts-GL&quot;">​</a></h3><p>下载合适版本的 ECharts 和 ECharts-GL，在项目中进行引入，有以下几种引入方式：</p><p><strong>从 GitHub 获取</strong></p><p>在<a href="https://github.com/apache/echarts" target="_blank" rel="noreferrer">apache/echarts</a>  项目的  <a href="https://github.com/apache/echarts/releases" target="_blank" rel="noreferrer">release</a>  页面可以找到各个版本的链接。</p><p>在<a href="https://github.com/ecomfe/echarts-gl" target="_blank" rel="noreferrer">ecomfe/echarts-gl</a>  项目的  <a href="https://github.com/ecomfe/echarts-gl/releases" target="_blank" rel="noreferrer">release</a>  页面可以找到各个版本的链接。</p><p>下载后导入本地项目中即可使用。</p><p><strong>从 npm 获取</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echarts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echarts-gl</span></span></code></pre></div><p><strong>从 CDN 获取</strong></p><p>从第三方 CDN 网站进行引入，例如：cdnjs</p><p><a href="https://cdnjs.com/libraries/echarts" target="_blank" rel="noreferrer">echarts</a></p><p><a href="https://cdnjs.com/libraries/echarts-gl" target="_blank" rel="noreferrer">echarts-gl</a></p><blockquote><p>本文示例代码使用的库版本是：echarts：5.4.3，echarts-gl：2.0.9</p></blockquote><h3 id="_2-准备-geojson-数据" tabindex="-1">2. 准备 geoJson 数据 <a class="header-anchor" href="#_2-准备-geojson-数据" aria-label="Permalink to &quot;2. 准备 geoJson 数据&quot;">​</a></h3><p>在测试阶段，我们可以使用一些第三方网站已有的最新 geoJson 数据进行调试，比如：通过阿里云 DataV 数据可视化地图小工具，可以请求最新的 json 数据文件进行调试：</p><p><a href="https://datav.aliyun.com/portal/school/atlas/area_selector" target="_blank" rel="noreferrer">阿里云 DataV.GeoAtlas 地理小工具</a></p><p>它提供了一些 JSON API 可以通过远程调用，比如，请求中国地图的 geoJson 数据</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">axios.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://geo.datav.aliyun.com/areas_v3/bound/geojson?code=100000_full&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 请求完成的中国地图 geoJson 数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>如果你在请求【阿里云 DataV 数据平台】的接口，出现了 403 Forbidden 的问题，请参考以下文章进行解决：</p><p><a href="https://juejin.cn/post/7388072384349650959" target="_blank" rel="noreferrer">巧用 meta 标签，设置 referrer 解决 403 Forbidden 问题</a></p><p>注意：建议本地调试可以使用阿里云的地理数据 API，如果要上线发布正式版，建议下载下所有的 geoJson 文件，放在自己服务器下。我已经整理好了最新一版的 geoJson 数据，需要的可以进行下载：</p><p>点击下载按钮即可下载：<a href="https://github.com/anyup/juejin-up/blob/master/plugins/%E5%85%A8%E5%9B%BD%E5%9C%B0%E5%9B%BE%E4%B8%8B%E9%92%BB%20geoJson%20%E5%AE%8C%E6%95%B4%E7%89%88%2020240312.zip" target="_blank" rel="noreferrer">全国地图下钻 geoJson 完整版下载 20240312.zip</a></p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/4b62bf0e121747768bf302a9713ac970~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1727688670&amp;x-orig-sign=P8%2BbdTo8lQ6tO%2F%2F%2FWaH63K5%2FOgo%3D" alt="Snipaste_2024-07-12_15-28-54.png"></p><h3 id="_3-开发基础-3d-地图" tabindex="-1">3. 开发基础 3D 地图 <a class="header-anchor" href="#_3-开发基础-3d-地图" aria-label="Permalink to &quot;3. 开发基础 3D 地图&quot;">​</a></h3><p>根据上一步，我们已经获取到所有的 geoJson 数据，接下来我们实现完整的一个 3D 地图，以中国地图为例：</p><p>在这里，如何详细的从零到一实现一个 3D 版中国地图，不再过度讲解了，因为上篇文章已经详细的实现了 3D 版的世界地图、中国地图以及省市级地图，请查看上一篇文章：<a href="https://juejin.cn/post/7388281982985699363" target="_blank" rel="noreferrer">使用 ECharts-GL 实现世界级、国家级、省市级 3D 地图</a></p><p>接下来我们简单总结一下，要实现一款效果还算不错的 3D 地图，只需要以下配置即可：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> geoJson</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;获取的的中国地图json&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> myChart</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;main&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 注册地图名字(china)和数据(geoJson)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;china&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, geoJson)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 图表配置项</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tooltip: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 提示框组件，指向地图该如何提示</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  series: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      type: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;map3D&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      map: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;china&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      itemStyle: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 地图的区域颜色</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      label: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 标签的相关设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      emphasis: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 鼠标 hover 高亮时图形和标签的样式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      environment: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 环境贴图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      groundPlane: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置地面，地面可以使整个场景看起来更真实，更有模型感。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      light: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 光照相关的设置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      viewControl: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置视角控制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      shading: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;realistic&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 三维图形的着色效果</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      realisticMaterial: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 真实感材质相关的配置项</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      postEffect: {}, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 后处理特效</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      data: [] </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 数据，重要</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置图表实例的配置项以及数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(option)</span></span></code></pre></div><p><img src="https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b76f9a4a47ff40dc9a89ed05dbbefb0b~tplv-k3u1fbpfcp-jj-mark:0:0:0:0:q75.image#?w=1600&amp;h=1164&amp;s=240208&amp;e=png&amp;b=050a2e" alt="image.png"></p><h2 id="三-实现-3d-地图下钻" tabindex="-1">三. 实现 3D 地图下钻 <a class="header-anchor" href="#三-实现-3d-地图下钻" aria-label="Permalink to &quot;三. 实现 3D 地图下钻&quot;">​</a></h2><p>有了以上的效果，接下来我们从零开始实现 3D 地图的下钻功能</p><ul><li>准备层级数据（包括中国、各省市区的 geoJson 数据）</li><li>设置地图点击事件，当点击地图区域时，获取到该区域对应的 geoJson 数据</li><li>根据区域 geoJson 数据渲染区域地图</li></ul><h3 id="_1-设置地图点击事件" tabindex="-1">1. 设置地图点击事件 <a class="header-anchor" href="#_1-设置地图点击事件" aria-label="Permalink to &quot;1. 设置地图点击事件&quot;">​</a></h3><p>首先需要给地图添加点击事件监听器，当用户点击地图时，获取到用户点击该区域对应的编码。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params.data) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.data</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>在这里有一个前提，我们在点击地图某区域时，能获取到该区域 adcode 的前提是：在渲染地图时，提前赋值了数据（在 series.data 中赋值），例如如下代码：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> option</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  series: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      data: geoJson.features.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.properties</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>有了以上代码的设置，即可正常获取到 adcode, name, level 等数据。</p><p>当我们点击地图区域时，以点击山东省为例，会输出如下图所示的数据，则证明我们的数据正常。</p><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/983f632ca8584a01b0a08a6f32aef487~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1727688670&amp;x-orig-sign=MRk1FJFOs57m0df7YkRA3X%2BS7AU%3D" alt="image.png"></p><h3 id="_2-获取区域地图-json" tabindex="-1">2. 获取区域地图 JSON <a class="header-anchor" href="#_2-获取区域地图-json" aria-label="Permalink to &quot;2. 获取区域地图 JSON&quot;">​</a></h3><p>根据上面的点击，获取到点击区域的地理编码 <code>adcode</code> 和名称，接下来需要通过 <code>adcode</code> 来获取子区域的 geoJson，以下的代码是通过调用阿里云 DataV 在线的 JSON API 接口获取到的数据。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据 adcode 获取原始地图json数据</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> axios.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`https://geo.datav.aliyun.com/areas_v3/bound/geojson?code=\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">adcode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}_full\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 例如：根据 adcode 获取省市区的 json 数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取山东省下的所有市的数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;370000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;山东省子区域地图数据：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 获取青岛市下的所有区级数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;370200&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">res</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;山东省子区域地图数据：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, res)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="_3-渲染区域地图" tabindex="-1">3. 渲染区域地图 <a class="header-anchor" href="#_3-渲染区域地图" aria-label="Permalink to &quot;3. 渲染区域地图&quot;">​</a></h3><p>通过上述操作，我们成功的获取到了点击区域的子区域地图 JSON 数据，通过 JSON 数据，我们就可以动态的渲染区域地图了，如下代码所示：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 渲染地图</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 注册地图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  echarts.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, data)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 根据 json 数据拼装 mapdata， 用于地图点击下钻时传递数据，主要有adcode、name</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> mapdata</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data.features.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">item</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item.properties</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 配置option</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  setOption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, mapdata)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 根据adcode区域编码获取地图数据，例如：根据山东省的区域编码：370000，获取市区geoJson数据</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;370000&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;山东省子区域地图数据：&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;山东省&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h2 id="四-体验优化" tabindex="-1">四. 体验优化 <a class="header-anchor" href="#四-体验优化" aria-label="Permalink to &quot;四. 体验优化&quot;">​</a></h2><p>所谓体验优化，就是让用户使用舒服，在这里我仅提供一些简单优化思路，包括但不限于以下几种：</p><ul><li><p>判断是否为最底层地图，也就是末级地图，当我们点击地图进行下钻到无法再继续时，可以提示用户或返回首层地图，是具体业务而定</p></li><li><p>可以记录点击地图的路径历史，类似于浏览器的 history，可以回退，避免用户点击下钻错误时返回上一层地图</p></li></ul><h3 id="_1-判断末级地图" tabindex="-1">1. 判断末级地图 <a class="header-anchor" href="#_1-判断末级地图" aria-label="Permalink to &quot;1. 判断末级地图&quot;">​</a></h3><p>在事件处理函数中，根据用户点击的区域信息，判断是否需要进行下钻操作。如果需要下钻，才可以展示子区域的地图信息。如果已经到了地图最末端，无法再进行下钻，应该相应提示用户。</p><p>例如，当用户点击到区县级地图且无法再下钻时，可以考虑弹窗显示详细信息或者返回至上一级别。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置地图点击事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myChart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">params</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (params.data) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> params.data</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 判断如果是 district 层级，则提示用户已经为最底级了</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (level </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;district&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      alert</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;无此区域地图显示！&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      initChinaMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 重新渲染中国地图或其他逻辑处理</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">      return</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 继续进行下钻</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name, adcode }, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/b7611954e3b64087b93d94dffbf2f8d2~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1727688670&amp;x-orig-sign=0G8K45SQe%2FEOECEurpNndw1JVSk%3D" alt="3d1.gif"></p><h3 id="_2-返回上一级地图" tabindex="-1">2. 返回上一级地图 <a class="header-anchor" href="#_2-返回上一级地图" aria-label="Permalink to &quot;2. 返回上一级地图&quot;">​</a></h3><p>在用户点击地图进行下钻的过程中，可以返回上一层进行重新点击地图进行下探！</p><p>实现这个功能主要需要定义一个变量 mapList 数组，记录地图的层级数据，主要用于返回时可以根据 adcode 获取上一级的地图数据。</p><p>当用户点击地图进行下钻时，记录地图的名称、级别和编码。当用户返回上一级的时候，需要删除记录数组中对应的数据。</p><p>核心代码如下：</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击地图下钻时记录name和adcode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name, adcode })</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击返回时删除对应的name和adcode</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mapList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 点击返回，地图返回上一级</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> goBack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (mapList.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">adcode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mapList[mapList.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    mapList.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">splice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    getJSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({ name, adcode }, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      renderChart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, data)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p0-xtjj-private.juejin.cn/tos-cn-i-73owjymdk6/7720db4df761445d9c90bfad42eedec4~tplv-73owjymdk6-jj-mark-v1:0:0:0:0:5o6Y6YeR5oqA5pyv56S-5Yy6IEAgYW55dXA=:q75.awebp?policy=eyJ2bSI6MywidWlkIjoiNDIzMDU3NjQ3MjU4OTk3NiJ9&amp;rk3s=f64ab15b&amp;x-orig-authkey=f32326d3454f2ac7e96d3d06cdbb035152127018&amp;x-orig-expires=1727688670&amp;x-orig-sign=IhHfNcNZChApBUb3E1HwWIw2yRw%3D" alt="3d2.gif"></p><h2 id="五-演示" tabindex="-1">五. 演示 <a class="header-anchor" href="#五-演示" aria-label="Permalink to &quot;五. 演示&quot;">​</a></h2><p>该代码片段已经发布到码上掘金，大家可以尽情的修改完善，我是使用古老的 html + JavaScript 实现，不限于框架，你可以使用 Vue 或 React 等语言改写。</p><p><a href="https://code.juejin.cn/pen/7391785145499385865" target="_blank" rel="noreferrer">jcode</a></p><h2 id="六-总结" tabindex="-1">六. 总结 <a class="header-anchor" href="#六-总结" aria-label="Permalink to &quot;六. 总结&quot;">​</a></h2><p>通过本篇文章，我们使用 ECharts + ECharts-GL 实现一款还不错的 3D 地图，并且快速地实现地图下钻功能。最后，我们还优化了一些使用体验，比如判断末级地图，避免递归下钻，还实现了支持返回上一层地图，</p><p>当然，本文完成的是核心下钻逻辑，在实际过程中，你可能会根据项目要求进一步优化完善，对地图继续进行个性化定制，但这些并不是难点，相信参考 ECharts 和 ECharts-GL 配置项手册来进行配置地图属性，也是非常容易实现的。</p><h2 id="七-资源链接" tabindex="-1">七. 资源链接 <a class="header-anchor" href="#七-资源链接" aria-label="Permalink to &quot;七. 资源链接&quot;">​</a></h2><ol><li><p>代码演示地址：<a href="https://www.anyup.cn/demo/echarts/3d-map-drilldown.html" target="_blank" rel="noreferrer">3D 中国地图下钻演示：支持所有省市下钻演示</a></p></li><li><p>源码地址：<a href="https://code.juejin.cn/pen/7391785145499385865" target="_blank" rel="noreferrer">ECharts 地图下钻源码地址</a></p></li><li><p>全国及省市区级 geoJson 文件下载：<a href="https://github.com/anyup/juejin-up/blob/master/plugins/%E5%85%A8%E5%9B%BD%E5%9C%B0%E5%9B%BE%E4%B8%8B%E9%92%BB%20geoJson%20%E5%AE%8C%E6%95%B4%E7%89%88%2020240312.zip" target="_blank" rel="noreferrer">全国地图下钻 geoJson 完整版下载 20240312.zip</a></p></li><li><p>ECharts 官方文档：<a href="https://echarts.apache.org/zh/option.html#" target="_blank" rel="noreferrer">ECharts 地图配置项手册</a></p></li><li><p>ECharts-GL 官方文档：<a href="https://echarts.apache.org/zh/option-gl.html" target="_blank" rel="noreferrer">ECharts-GL 地图配置项手册</a></p></li></ol>`,82);function k(r,E,d,g,o,c){const s=t("ArticleFooter");return p(),a("div",null,[e,n(s,{link:"https://juejin.cn/post/7398352956712534054"})])}const C=i(l,[["render",k]]);export{F as __pageData,C as default};
